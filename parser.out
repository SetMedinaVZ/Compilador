Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VAR_BOOL

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LBRACE statement_list RBRACE
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> expression_statement
Rule 5     statement -> declaration_statement
Rule 6     statement -> assignment_statement
Rule 7     statement -> print_statement
Rule 8     statement -> if_statement
Rule 9     statement -> while_statement
Rule 10    statement -> for_statement
Rule 11    statement -> function_declaration
Rule 12    statement -> return_statement
Rule 13    function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
Rule 14    parameter_list -> parameter
Rule 15    parameter_list -> parameter_list COMA parameter
Rule 16    parameter_list -> empty
Rule 17    parameter -> type ID
Rule 18    return_statement -> RETURN expression SEMICOLON
Rule 19    declaration_statement -> type declaration_list SEMICOLON
Rule 20    declaration_list -> declaration_item
Rule 21    declaration_list -> declaration_list COMA declaration_item
Rule 22    declaration_item -> ID
Rule 23    declaration_item -> ID ASSIGN expression
Rule 24    declaration_item -> ID LBRACKET expression RBRACKET ASSIGN array_initialization
Rule 25    declaration_item -> ID LBRACKET expression RBRACKET
Rule 26    declaration_item -> ID ASSIGN array_initialization
Rule 27    array_initialization -> LBRACKET value_list RBRACKET
Rule 28    value_list -> expression
Rule 29    value_list -> value_list COMA expression
Rule 30    expression_list -> expression
Rule 31    expression_list -> expression_list COMA expression
Rule 32    assignment_statement -> ID ASSIGN expression SEMICOLON
Rule 33    assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
Rule 34    expression_statement -> expression SEMICOLON
Rule 35    print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON
Rule 36    print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON
Rule 37    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
Rule 38    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
Rule 39    else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 40    else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 41    else_if_list -> empty
Rule 42    optional_else -> ELSE LBRACE statement_list RBRACE
Rule 43    optional_else -> empty
Rule 44    while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 45    for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
Rule 46    expression -> expression PLUSPLUS
Rule 47    expression -> expression MINUSMINUS
Rule 48    expression -> PLUSPLUS expression
Rule 49    expression -> MINUSMINUS expression
Rule 50    expression -> expression PLUS expression
Rule 51    expression -> expression MINUS expression
Rule 52    expression -> expression TIMES expression
Rule 53    expression -> expression DIVIDE expression
Rule 54    expression -> expression LT expression
Rule 55    expression -> expression GT expression
Rule 56    expression -> expression LTE expression
Rule 57    expression -> expression GTE expression
Rule 58    expression -> expression EQ expression
Rule 59    expression -> expression NE expression
Rule 60    expression -> expression AND expression
Rule 61    expression -> expression OR expression
Rule 62    expression -> NOT expression
Rule 63    expression -> LPAREN expression RPAREN
Rule 64    expression -> VAR_INT
Rule 65    expression -> VAR_FLOAT
Rule 66    expression -> STRING
Rule 67    expression -> ID
Rule 68    expression -> TRUE
Rule 69    expression -> FALSE
Rule 70    expression -> function_call
Rule 71    function_call -> ID LPAREN argument_list RPAREN
Rule 72    argument_list -> expression
Rule 73    argument_list -> argument_list COMA expression
Rule 74    argument_list -> empty
Rule 75    type -> INT
Rule 76    type -> FLOAT
Rule 77    type -> BOOL
Rule 78    type -> STRING
Rule 79    type -> INT LBRACKET RBRACKET
Rule 80    type -> FLOAT LBRACKET RBRACKET
Rule 81    empty -> <empty>

Terminals, with rules where they appear

AND                  : 60
ASSIGN               : 23 24 26 32 33
BOOL                 : 77
COMA                 : 15 21 29 31 73
DIVIDE               : 53
ELSE                 : 39 40 42
EQ                   : 58
FALSE                : 69
FLOAT                : 76 80
FOR                  : 45
FUNCTION             : 13
GT                   : 55
GTE                  : 57
ID                   : 1 13 17 22 23 24 25 26 32 33 67 71
IF                   : 37 38 39 40
INT                  : 75 79
LBRACE               : 1 13 37 38 39 40 42 44 45
LBRACKET             : 24 25 27 33 79 80
LPAREN               : 13 35 36 37 38 39 40 44 45 63 71
LT                   : 54
LTE                  : 56
MINUS                : 51
MINUSMINUS           : 47 49
NE                   : 59
NOT                  : 62
OR                   : 61
PLUS                 : 50
PLUSPLUS             : 46 48
PROGRAM              : 1
RBRACE               : 1 13 37 38 39 40 42 44 45
RBRACKET             : 24 25 27 33 79 80
RETURN               : 18
RPAREN               : 13 35 36 37 38 39 40 44 45 63 71
SEMICOLON            : 18 19 32 33 34 35 36 45
STRING               : 66 78
TIMES                : 52
TRUE                 : 68
VAR_BOOL             : 
VAR_FLOAT            : 65
VAR_INT              : 64
WHILE                : 44
WRITE                : 36
WRITELN              : 35
error                : 

Nonterminals, with rules where they appear

argument_list        : 71 73
array_initialization : 24 26
assignment_statement : 6 45
declaration_item     : 20 21
declaration_list     : 19 21
declaration_statement : 5
else_if_list         : 37 39
empty                : 16 41 43 74
expression           : 18 23 24 25 28 29 30 31 32 33 33 34 37 38 39 40 44 45 45 46 47 48 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 63 72 73
expression_list      : 31 35 36
expression_statement : 4
for_statement        : 10
function_call        : 70
function_declaration : 11
if_statement         : 8
optional_else        : 37 38
parameter            : 14 15
parameter_list       : 13 15
print_statement      : 7
program              : 0
return_statement     : 12
statement            : 2 3
statement_list       : 1 3 13 37 38 39 40 42 44 45
type                 : 17 19
value_list           : 27 29
while_statement      : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID LBRACE statement_list RBRACE

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID LBRACE statement_list RBRACE

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 4


state 4

    (1) program -> PROGRAM ID LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    statement_list                 shift and go to state 6
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    expression                     shift and go to state 17
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 5

    (32) assignment_statement -> ID . ASSIGN expression SEMICOLON
    (33) assignment_statement -> ID . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (67) expression -> ID .
    (71) function_call -> ID . LPAREN argument_list RPAREN

    ASSIGN          shift and go to state 39
    LBRACKET        shift and go to state 40
    SEMICOLON       reduce using rule 67 (expression -> ID .)
    PLUSPLUS        reduce using rule 67 (expression -> ID .)
    MINUSMINUS      reduce using rule 67 (expression -> ID .)
    PLUS            reduce using rule 67 (expression -> ID .)
    MINUS           reduce using rule 67 (expression -> ID .)
    TIMES           reduce using rule 67 (expression -> ID .)
    DIVIDE          reduce using rule 67 (expression -> ID .)
    LT              reduce using rule 67 (expression -> ID .)
    GT              reduce using rule 67 (expression -> ID .)
    LTE             reduce using rule 67 (expression -> ID .)
    GTE             reduce using rule 67 (expression -> ID .)
    EQ              reduce using rule 67 (expression -> ID .)
    NE              reduce using rule 67 (expression -> ID .)
    AND             reduce using rule 67 (expression -> ID .)
    OR              reduce using rule 67 (expression -> ID .)
    LPAREN          shift and go to state 41


state 6

    (1) program -> PROGRAM ID LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 42
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    expression                     shift and go to state 17
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 7

    (2) statement_list -> statement .

    RBRACE          reduce using rule 2 (statement_list -> statement .)
    ID              reduce using rule 2 (statement_list -> statement .)
    WRITELN         reduce using rule 2 (statement_list -> statement .)
    WRITE           reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    FUNCTION        reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    PLUSPLUS        reduce using rule 2 (statement_list -> statement .)
    MINUSMINUS      reduce using rule 2 (statement_list -> statement .)
    NOT             reduce using rule 2 (statement_list -> statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement .)
    VAR_INT         reduce using rule 2 (statement_list -> statement .)
    VAR_FLOAT       reduce using rule 2 (statement_list -> statement .)
    STRING          reduce using rule 2 (statement_list -> statement .)
    TRUE            reduce using rule 2 (statement_list -> statement .)
    FALSE           reduce using rule 2 (statement_list -> statement .)
    INT             reduce using rule 2 (statement_list -> statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement .)
    BOOL            reduce using rule 2 (statement_list -> statement .)


state 8

    (4) statement -> expression_statement .

    RBRACE          reduce using rule 4 (statement -> expression_statement .)
    ID              reduce using rule 4 (statement -> expression_statement .)
    WRITELN         reduce using rule 4 (statement -> expression_statement .)
    WRITE           reduce using rule 4 (statement -> expression_statement .)
    IF              reduce using rule 4 (statement -> expression_statement .)
    WHILE           reduce using rule 4 (statement -> expression_statement .)
    FOR             reduce using rule 4 (statement -> expression_statement .)
    FUNCTION        reduce using rule 4 (statement -> expression_statement .)
    RETURN          reduce using rule 4 (statement -> expression_statement .)
    PLUSPLUS        reduce using rule 4 (statement -> expression_statement .)
    MINUSMINUS      reduce using rule 4 (statement -> expression_statement .)
    NOT             reduce using rule 4 (statement -> expression_statement .)
    LPAREN          reduce using rule 4 (statement -> expression_statement .)
    VAR_INT         reduce using rule 4 (statement -> expression_statement .)
    VAR_FLOAT       reduce using rule 4 (statement -> expression_statement .)
    STRING          reduce using rule 4 (statement -> expression_statement .)
    TRUE            reduce using rule 4 (statement -> expression_statement .)
    FALSE           reduce using rule 4 (statement -> expression_statement .)
    INT             reduce using rule 4 (statement -> expression_statement .)
    FLOAT           reduce using rule 4 (statement -> expression_statement .)
    BOOL            reduce using rule 4 (statement -> expression_statement .)


state 9

    (5) statement -> declaration_statement .

    RBRACE          reduce using rule 5 (statement -> declaration_statement .)
    ID              reduce using rule 5 (statement -> declaration_statement .)
    WRITELN         reduce using rule 5 (statement -> declaration_statement .)
    WRITE           reduce using rule 5 (statement -> declaration_statement .)
    IF              reduce using rule 5 (statement -> declaration_statement .)
    WHILE           reduce using rule 5 (statement -> declaration_statement .)
    FOR             reduce using rule 5 (statement -> declaration_statement .)
    FUNCTION        reduce using rule 5 (statement -> declaration_statement .)
    RETURN          reduce using rule 5 (statement -> declaration_statement .)
    PLUSPLUS        reduce using rule 5 (statement -> declaration_statement .)
    MINUSMINUS      reduce using rule 5 (statement -> declaration_statement .)
    NOT             reduce using rule 5 (statement -> declaration_statement .)
    LPAREN          reduce using rule 5 (statement -> declaration_statement .)
    VAR_INT         reduce using rule 5 (statement -> declaration_statement .)
    VAR_FLOAT       reduce using rule 5 (statement -> declaration_statement .)
    STRING          reduce using rule 5 (statement -> declaration_statement .)
    TRUE            reduce using rule 5 (statement -> declaration_statement .)
    FALSE           reduce using rule 5 (statement -> declaration_statement .)
    INT             reduce using rule 5 (statement -> declaration_statement .)
    FLOAT           reduce using rule 5 (statement -> declaration_statement .)
    BOOL            reduce using rule 5 (statement -> declaration_statement .)


state 10

    (6) statement -> assignment_statement .

    RBRACE          reduce using rule 6 (statement -> assignment_statement .)
    ID              reduce using rule 6 (statement -> assignment_statement .)
    WRITELN         reduce using rule 6 (statement -> assignment_statement .)
    WRITE           reduce using rule 6 (statement -> assignment_statement .)
    IF              reduce using rule 6 (statement -> assignment_statement .)
    WHILE           reduce using rule 6 (statement -> assignment_statement .)
    FOR             reduce using rule 6 (statement -> assignment_statement .)
    FUNCTION        reduce using rule 6 (statement -> assignment_statement .)
    RETURN          reduce using rule 6 (statement -> assignment_statement .)
    PLUSPLUS        reduce using rule 6 (statement -> assignment_statement .)
    MINUSMINUS      reduce using rule 6 (statement -> assignment_statement .)
    NOT             reduce using rule 6 (statement -> assignment_statement .)
    LPAREN          reduce using rule 6 (statement -> assignment_statement .)
    VAR_INT         reduce using rule 6 (statement -> assignment_statement .)
    VAR_FLOAT       reduce using rule 6 (statement -> assignment_statement .)
    STRING          reduce using rule 6 (statement -> assignment_statement .)
    TRUE            reduce using rule 6 (statement -> assignment_statement .)
    FALSE           reduce using rule 6 (statement -> assignment_statement .)
    INT             reduce using rule 6 (statement -> assignment_statement .)
    FLOAT           reduce using rule 6 (statement -> assignment_statement .)
    BOOL            reduce using rule 6 (statement -> assignment_statement .)


state 11

    (7) statement -> print_statement .

    RBRACE          reduce using rule 7 (statement -> print_statement .)
    ID              reduce using rule 7 (statement -> print_statement .)
    WRITELN         reduce using rule 7 (statement -> print_statement .)
    WRITE           reduce using rule 7 (statement -> print_statement .)
    IF              reduce using rule 7 (statement -> print_statement .)
    WHILE           reduce using rule 7 (statement -> print_statement .)
    FOR             reduce using rule 7 (statement -> print_statement .)
    FUNCTION        reduce using rule 7 (statement -> print_statement .)
    RETURN          reduce using rule 7 (statement -> print_statement .)
    PLUSPLUS        reduce using rule 7 (statement -> print_statement .)
    MINUSMINUS      reduce using rule 7 (statement -> print_statement .)
    NOT             reduce using rule 7 (statement -> print_statement .)
    LPAREN          reduce using rule 7 (statement -> print_statement .)
    VAR_INT         reduce using rule 7 (statement -> print_statement .)
    VAR_FLOAT       reduce using rule 7 (statement -> print_statement .)
    STRING          reduce using rule 7 (statement -> print_statement .)
    TRUE            reduce using rule 7 (statement -> print_statement .)
    FALSE           reduce using rule 7 (statement -> print_statement .)
    INT             reduce using rule 7 (statement -> print_statement .)
    FLOAT           reduce using rule 7 (statement -> print_statement .)
    BOOL            reduce using rule 7 (statement -> print_statement .)


state 12

    (8) statement -> if_statement .

    RBRACE          reduce using rule 8 (statement -> if_statement .)
    ID              reduce using rule 8 (statement -> if_statement .)
    WRITELN         reduce using rule 8 (statement -> if_statement .)
    WRITE           reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    FOR             reduce using rule 8 (statement -> if_statement .)
    FUNCTION        reduce using rule 8 (statement -> if_statement .)
    RETURN          reduce using rule 8 (statement -> if_statement .)
    PLUSPLUS        reduce using rule 8 (statement -> if_statement .)
    MINUSMINUS      reduce using rule 8 (statement -> if_statement .)
    NOT             reduce using rule 8 (statement -> if_statement .)
    LPAREN          reduce using rule 8 (statement -> if_statement .)
    VAR_INT         reduce using rule 8 (statement -> if_statement .)
    VAR_FLOAT       reduce using rule 8 (statement -> if_statement .)
    STRING          reduce using rule 8 (statement -> if_statement .)
    TRUE            reduce using rule 8 (statement -> if_statement .)
    FALSE           reduce using rule 8 (statement -> if_statement .)
    INT             reduce using rule 8 (statement -> if_statement .)
    FLOAT           reduce using rule 8 (statement -> if_statement .)
    BOOL            reduce using rule 8 (statement -> if_statement .)


state 13

    (9) statement -> while_statement .

    RBRACE          reduce using rule 9 (statement -> while_statement .)
    ID              reduce using rule 9 (statement -> while_statement .)
    WRITELN         reduce using rule 9 (statement -> while_statement .)
    WRITE           reduce using rule 9 (statement -> while_statement .)
    IF              reduce using rule 9 (statement -> while_statement .)
    WHILE           reduce using rule 9 (statement -> while_statement .)
    FOR             reduce using rule 9 (statement -> while_statement .)
    FUNCTION        reduce using rule 9 (statement -> while_statement .)
    RETURN          reduce using rule 9 (statement -> while_statement .)
    PLUSPLUS        reduce using rule 9 (statement -> while_statement .)
    MINUSMINUS      reduce using rule 9 (statement -> while_statement .)
    NOT             reduce using rule 9 (statement -> while_statement .)
    LPAREN          reduce using rule 9 (statement -> while_statement .)
    VAR_INT         reduce using rule 9 (statement -> while_statement .)
    VAR_FLOAT       reduce using rule 9 (statement -> while_statement .)
    STRING          reduce using rule 9 (statement -> while_statement .)
    TRUE            reduce using rule 9 (statement -> while_statement .)
    FALSE           reduce using rule 9 (statement -> while_statement .)
    INT             reduce using rule 9 (statement -> while_statement .)
    FLOAT           reduce using rule 9 (statement -> while_statement .)
    BOOL            reduce using rule 9 (statement -> while_statement .)


state 14

    (10) statement -> for_statement .

    RBRACE          reduce using rule 10 (statement -> for_statement .)
    ID              reduce using rule 10 (statement -> for_statement .)
    WRITELN         reduce using rule 10 (statement -> for_statement .)
    WRITE           reduce using rule 10 (statement -> for_statement .)
    IF              reduce using rule 10 (statement -> for_statement .)
    WHILE           reduce using rule 10 (statement -> for_statement .)
    FOR             reduce using rule 10 (statement -> for_statement .)
    FUNCTION        reduce using rule 10 (statement -> for_statement .)
    RETURN          reduce using rule 10 (statement -> for_statement .)
    PLUSPLUS        reduce using rule 10 (statement -> for_statement .)
    MINUSMINUS      reduce using rule 10 (statement -> for_statement .)
    NOT             reduce using rule 10 (statement -> for_statement .)
    LPAREN          reduce using rule 10 (statement -> for_statement .)
    VAR_INT         reduce using rule 10 (statement -> for_statement .)
    VAR_FLOAT       reduce using rule 10 (statement -> for_statement .)
    STRING          reduce using rule 10 (statement -> for_statement .)
    TRUE            reduce using rule 10 (statement -> for_statement .)
    FALSE           reduce using rule 10 (statement -> for_statement .)
    INT             reduce using rule 10 (statement -> for_statement .)
    FLOAT           reduce using rule 10 (statement -> for_statement .)
    BOOL            reduce using rule 10 (statement -> for_statement .)


state 15

    (11) statement -> function_declaration .

    RBRACE          reduce using rule 11 (statement -> function_declaration .)
    ID              reduce using rule 11 (statement -> function_declaration .)
    WRITELN         reduce using rule 11 (statement -> function_declaration .)
    WRITE           reduce using rule 11 (statement -> function_declaration .)
    IF              reduce using rule 11 (statement -> function_declaration .)
    WHILE           reduce using rule 11 (statement -> function_declaration .)
    FOR             reduce using rule 11 (statement -> function_declaration .)
    FUNCTION        reduce using rule 11 (statement -> function_declaration .)
    RETURN          reduce using rule 11 (statement -> function_declaration .)
    PLUSPLUS        reduce using rule 11 (statement -> function_declaration .)
    MINUSMINUS      reduce using rule 11 (statement -> function_declaration .)
    NOT             reduce using rule 11 (statement -> function_declaration .)
    LPAREN          reduce using rule 11 (statement -> function_declaration .)
    VAR_INT         reduce using rule 11 (statement -> function_declaration .)
    VAR_FLOAT       reduce using rule 11 (statement -> function_declaration .)
    STRING          reduce using rule 11 (statement -> function_declaration .)
    TRUE            reduce using rule 11 (statement -> function_declaration .)
    FALSE           reduce using rule 11 (statement -> function_declaration .)
    INT             reduce using rule 11 (statement -> function_declaration .)
    FLOAT           reduce using rule 11 (statement -> function_declaration .)
    BOOL            reduce using rule 11 (statement -> function_declaration .)


state 16

    (12) statement -> return_statement .

    RBRACE          reduce using rule 12 (statement -> return_statement .)
    ID              reduce using rule 12 (statement -> return_statement .)
    WRITELN         reduce using rule 12 (statement -> return_statement .)
    WRITE           reduce using rule 12 (statement -> return_statement .)
    IF              reduce using rule 12 (statement -> return_statement .)
    WHILE           reduce using rule 12 (statement -> return_statement .)
    FOR             reduce using rule 12 (statement -> return_statement .)
    FUNCTION        reduce using rule 12 (statement -> return_statement .)
    RETURN          reduce using rule 12 (statement -> return_statement .)
    PLUSPLUS        reduce using rule 12 (statement -> return_statement .)
    MINUSMINUS      reduce using rule 12 (statement -> return_statement .)
    NOT             reduce using rule 12 (statement -> return_statement .)
    LPAREN          reduce using rule 12 (statement -> return_statement .)
    VAR_INT         reduce using rule 12 (statement -> return_statement .)
    VAR_FLOAT       reduce using rule 12 (statement -> return_statement .)
    STRING          reduce using rule 12 (statement -> return_statement .)
    TRUE            reduce using rule 12 (statement -> return_statement .)
    FALSE           reduce using rule 12 (statement -> return_statement .)
    INT             reduce using rule 12 (statement -> return_statement .)
    FLOAT           reduce using rule 12 (statement -> return_statement .)
    BOOL            reduce using rule 12 (statement -> return_statement .)


state 17

    (34) expression_statement -> expression . SEMICOLON
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    SEMICOLON       shift and go to state 44
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 18

    (19) declaration_statement -> type . declaration_list SEMICOLON
    (20) declaration_list -> . declaration_item
    (21) declaration_list -> . declaration_list COMA declaration_item
    (22) declaration_item -> . ID
    (23) declaration_item -> . ID ASSIGN expression
    (24) declaration_item -> . ID LBRACKET expression RBRACKET ASSIGN array_initialization
    (25) declaration_item -> . ID LBRACKET expression RBRACKET
    (26) declaration_item -> . ID ASSIGN array_initialization

    ID              shift and go to state 61

    declaration_list               shift and go to state 59
    declaration_item               shift and go to state 60

state 19

    (35) print_statement -> WRITELN . LPAREN expression_list RPAREN SEMICOLON

    LPAREN          shift and go to state 62


state 20

    (63) expression -> LPAREN . expression RPAREN
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 63
    function_call                  shift and go to state 35

state 21

    (36) print_statement -> WRITE . LPAREN expression_list RPAREN SEMICOLON

    LPAREN          shift and go to state 66


state 22

    (37) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else

    LPAREN          shift and go to state 67


state 23

    (44) while_statement -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 68


state 24

    (45) for_statement -> FOR . LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 69


state 25

    (13) function_declaration -> FUNCTION . ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 70


state 26

    (18) return_statement -> RETURN . expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 71
    function_call                  shift and go to state 35

state 27

    (48) expression -> PLUSPLUS . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 72
    function_call                  shift and go to state 35

state 28

    (49) expression -> MINUSMINUS . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 73
    function_call                  shift and go to state 35

state 29

    (62) expression -> NOT . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 74
    function_call                  shift and go to state 35

state 30

    (64) expression -> VAR_INT .

    SEMICOLON       reduce using rule 64 (expression -> VAR_INT .)
    PLUSPLUS        reduce using rule 64 (expression -> VAR_INT .)
    MINUSMINUS      reduce using rule 64 (expression -> VAR_INT .)
    PLUS            reduce using rule 64 (expression -> VAR_INT .)
    MINUS           reduce using rule 64 (expression -> VAR_INT .)
    TIMES           reduce using rule 64 (expression -> VAR_INT .)
    DIVIDE          reduce using rule 64 (expression -> VAR_INT .)
    LT              reduce using rule 64 (expression -> VAR_INT .)
    GT              reduce using rule 64 (expression -> VAR_INT .)
    LTE             reduce using rule 64 (expression -> VAR_INT .)
    GTE             reduce using rule 64 (expression -> VAR_INT .)
    EQ              reduce using rule 64 (expression -> VAR_INT .)
    NE              reduce using rule 64 (expression -> VAR_INT .)
    AND             reduce using rule 64 (expression -> VAR_INT .)
    OR              reduce using rule 64 (expression -> VAR_INT .)
    RPAREN          reduce using rule 64 (expression -> VAR_INT .)
    RBRACKET        reduce using rule 64 (expression -> VAR_INT .)
    COMA            reduce using rule 64 (expression -> VAR_INT .)


state 31

    (65) expression -> VAR_FLOAT .

    SEMICOLON       reduce using rule 65 (expression -> VAR_FLOAT .)
    PLUSPLUS        reduce using rule 65 (expression -> VAR_FLOAT .)
    MINUSMINUS      reduce using rule 65 (expression -> VAR_FLOAT .)
    PLUS            reduce using rule 65 (expression -> VAR_FLOAT .)
    MINUS           reduce using rule 65 (expression -> VAR_FLOAT .)
    TIMES           reduce using rule 65 (expression -> VAR_FLOAT .)
    DIVIDE          reduce using rule 65 (expression -> VAR_FLOAT .)
    LT              reduce using rule 65 (expression -> VAR_FLOAT .)
    GT              reduce using rule 65 (expression -> VAR_FLOAT .)
    LTE             reduce using rule 65 (expression -> VAR_FLOAT .)
    GTE             reduce using rule 65 (expression -> VAR_FLOAT .)
    EQ              reduce using rule 65 (expression -> VAR_FLOAT .)
    NE              reduce using rule 65 (expression -> VAR_FLOAT .)
    AND             reduce using rule 65 (expression -> VAR_FLOAT .)
    OR              reduce using rule 65 (expression -> VAR_FLOAT .)
    RPAREN          reduce using rule 65 (expression -> VAR_FLOAT .)
    RBRACKET        reduce using rule 65 (expression -> VAR_FLOAT .)
    COMA            reduce using rule 65 (expression -> VAR_FLOAT .)


state 32

    (66) expression -> STRING .
    (78) type -> STRING .

    SEMICOLON       reduce using rule 66 (expression -> STRING .)
    PLUSPLUS        reduce using rule 66 (expression -> STRING .)
    MINUSMINUS      reduce using rule 66 (expression -> STRING .)
    PLUS            reduce using rule 66 (expression -> STRING .)
    MINUS           reduce using rule 66 (expression -> STRING .)
    TIMES           reduce using rule 66 (expression -> STRING .)
    DIVIDE          reduce using rule 66 (expression -> STRING .)
    LT              reduce using rule 66 (expression -> STRING .)
    GT              reduce using rule 66 (expression -> STRING .)
    LTE             reduce using rule 66 (expression -> STRING .)
    GTE             reduce using rule 66 (expression -> STRING .)
    EQ              reduce using rule 66 (expression -> STRING .)
    NE              reduce using rule 66 (expression -> STRING .)
    AND             reduce using rule 66 (expression -> STRING .)
    OR              reduce using rule 66 (expression -> STRING .)
    ID              reduce using rule 78 (type -> STRING .)


state 33

    (68) expression -> TRUE .

    SEMICOLON       reduce using rule 68 (expression -> TRUE .)
    PLUSPLUS        reduce using rule 68 (expression -> TRUE .)
    MINUSMINUS      reduce using rule 68 (expression -> TRUE .)
    PLUS            reduce using rule 68 (expression -> TRUE .)
    MINUS           reduce using rule 68 (expression -> TRUE .)
    TIMES           reduce using rule 68 (expression -> TRUE .)
    DIVIDE          reduce using rule 68 (expression -> TRUE .)
    LT              reduce using rule 68 (expression -> TRUE .)
    GT              reduce using rule 68 (expression -> TRUE .)
    LTE             reduce using rule 68 (expression -> TRUE .)
    GTE             reduce using rule 68 (expression -> TRUE .)
    EQ              reduce using rule 68 (expression -> TRUE .)
    NE              reduce using rule 68 (expression -> TRUE .)
    AND             reduce using rule 68 (expression -> TRUE .)
    OR              reduce using rule 68 (expression -> TRUE .)
    RPAREN          reduce using rule 68 (expression -> TRUE .)
    RBRACKET        reduce using rule 68 (expression -> TRUE .)
    COMA            reduce using rule 68 (expression -> TRUE .)


state 34

    (69) expression -> FALSE .

    SEMICOLON       reduce using rule 69 (expression -> FALSE .)
    PLUSPLUS        reduce using rule 69 (expression -> FALSE .)
    MINUSMINUS      reduce using rule 69 (expression -> FALSE .)
    PLUS            reduce using rule 69 (expression -> FALSE .)
    MINUS           reduce using rule 69 (expression -> FALSE .)
    TIMES           reduce using rule 69 (expression -> FALSE .)
    DIVIDE          reduce using rule 69 (expression -> FALSE .)
    LT              reduce using rule 69 (expression -> FALSE .)
    GT              reduce using rule 69 (expression -> FALSE .)
    LTE             reduce using rule 69 (expression -> FALSE .)
    GTE             reduce using rule 69 (expression -> FALSE .)
    EQ              reduce using rule 69 (expression -> FALSE .)
    NE              reduce using rule 69 (expression -> FALSE .)
    AND             reduce using rule 69 (expression -> FALSE .)
    OR              reduce using rule 69 (expression -> FALSE .)
    RPAREN          reduce using rule 69 (expression -> FALSE .)
    RBRACKET        reduce using rule 69 (expression -> FALSE .)
    COMA            reduce using rule 69 (expression -> FALSE .)


state 35

    (70) expression -> function_call .

    SEMICOLON       reduce using rule 70 (expression -> function_call .)
    PLUSPLUS        reduce using rule 70 (expression -> function_call .)
    MINUSMINUS      reduce using rule 70 (expression -> function_call .)
    PLUS            reduce using rule 70 (expression -> function_call .)
    MINUS           reduce using rule 70 (expression -> function_call .)
    TIMES           reduce using rule 70 (expression -> function_call .)
    DIVIDE          reduce using rule 70 (expression -> function_call .)
    LT              reduce using rule 70 (expression -> function_call .)
    GT              reduce using rule 70 (expression -> function_call .)
    LTE             reduce using rule 70 (expression -> function_call .)
    GTE             reduce using rule 70 (expression -> function_call .)
    EQ              reduce using rule 70 (expression -> function_call .)
    NE              reduce using rule 70 (expression -> function_call .)
    AND             reduce using rule 70 (expression -> function_call .)
    OR              reduce using rule 70 (expression -> function_call .)
    RPAREN          reduce using rule 70 (expression -> function_call .)
    RBRACKET        reduce using rule 70 (expression -> function_call .)
    COMA            reduce using rule 70 (expression -> function_call .)


state 36

    (75) type -> INT .
    (79) type -> INT . LBRACKET RBRACKET

    ID              reduce using rule 75 (type -> INT .)
    LBRACKET        shift and go to state 75


state 37

    (76) type -> FLOAT .
    (80) type -> FLOAT . LBRACKET RBRACKET

    ID              reduce using rule 76 (type -> FLOAT .)
    LBRACKET        shift and go to state 76


state 38

    (77) type -> BOOL .

    ID              reduce using rule 77 (type -> BOOL .)


state 39

    (32) assignment_statement -> ID ASSIGN . expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 77
    function_call                  shift and go to state 35

state 40

    (33) assignment_statement -> ID LBRACKET . expression RBRACKET ASSIGN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 78
    function_call                  shift and go to state 35

state 41

    (71) function_call -> ID LPAREN . argument_list RPAREN
    (72) argument_list -> . expression
    (73) argument_list -> . argument_list COMA expression
    (74) argument_list -> . empty
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (81) empty -> .
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    RPAREN          reduce using rule 81 (empty -> .)
    COMA            reduce using rule 81 (empty -> .)

    argument_list                  shift and go to state 79
    expression                     shift and go to state 80
    empty                          shift and go to state 81
    function_call                  shift and go to state 35

state 42

    (1) program -> PROGRAM ID LBRACE statement_list RBRACE .

    $end            reduce using rule 1 (program -> PROGRAM ID LBRACE statement_list RBRACE .)


state 43

    (3) statement_list -> statement_list statement .

    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)
    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    WRITELN         reduce using rule 3 (statement_list -> statement_list statement .)
    WRITE           reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    FUNCTION        reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    PLUSPLUS        reduce using rule 3 (statement_list -> statement_list statement .)
    MINUSMINUS      reduce using rule 3 (statement_list -> statement_list statement .)
    NOT             reduce using rule 3 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement_list statement .)
    VAR_INT         reduce using rule 3 (statement_list -> statement_list statement .)
    VAR_FLOAT       reduce using rule 3 (statement_list -> statement_list statement .)
    STRING          reduce using rule 3 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 3 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 3 (statement_list -> statement_list statement .)
    INT             reduce using rule 3 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 3 (statement_list -> statement_list statement .)


state 44

    (34) expression_statement -> expression SEMICOLON .

    RBRACE          reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    ID              reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    WRITELN         reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    WRITE           reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    WHILE           reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    FOR             reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    FUNCTION        reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    RETURN          reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    NOT             reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    VAR_INT         reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    TRUE            reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    FALSE           reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    INT             reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 34 (expression_statement -> expression SEMICOLON .)
    BOOL            reduce using rule 34 (expression_statement -> expression SEMICOLON .)


state 45

    (46) expression -> expression PLUSPLUS .

    SEMICOLON       reduce using rule 46 (expression -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 46 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 46 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 46 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 46 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 46 (expression -> expression PLUSPLUS .)
    DIVIDE          reduce using rule 46 (expression -> expression PLUSPLUS .)
    LT              reduce using rule 46 (expression -> expression PLUSPLUS .)
    GT              reduce using rule 46 (expression -> expression PLUSPLUS .)
    LTE             reduce using rule 46 (expression -> expression PLUSPLUS .)
    GTE             reduce using rule 46 (expression -> expression PLUSPLUS .)
    EQ              reduce using rule 46 (expression -> expression PLUSPLUS .)
    NE              reduce using rule 46 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 46 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 46 (expression -> expression PLUSPLUS .)
    RPAREN          reduce using rule 46 (expression -> expression PLUSPLUS .)
    RBRACKET        reduce using rule 46 (expression -> expression PLUSPLUS .)
    COMA            reduce using rule 46 (expression -> expression PLUSPLUS .)


state 46

    (47) expression -> expression MINUSMINUS .

    SEMICOLON       reduce using rule 47 (expression -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 47 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 47 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 47 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 47 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 47 (expression -> expression MINUSMINUS .)
    DIVIDE          reduce using rule 47 (expression -> expression MINUSMINUS .)
    LT              reduce using rule 47 (expression -> expression MINUSMINUS .)
    GT              reduce using rule 47 (expression -> expression MINUSMINUS .)
    LTE             reduce using rule 47 (expression -> expression MINUSMINUS .)
    GTE             reduce using rule 47 (expression -> expression MINUSMINUS .)
    EQ              reduce using rule 47 (expression -> expression MINUSMINUS .)
    NE              reduce using rule 47 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 47 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 47 (expression -> expression MINUSMINUS .)
    RPAREN          reduce using rule 47 (expression -> expression MINUSMINUS .)
    RBRACKET        reduce using rule 47 (expression -> expression MINUSMINUS .)
    COMA            reduce using rule 47 (expression -> expression MINUSMINUS .)


state 47

    (50) expression -> expression PLUS . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 82
    function_call                  shift and go to state 35

state 48

    (51) expression -> expression MINUS . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 83
    function_call                  shift and go to state 35

state 49

    (52) expression -> expression TIMES . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 84
    function_call                  shift and go to state 35

state 50

    (53) expression -> expression DIVIDE . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 85
    function_call                  shift and go to state 35

state 51

    (54) expression -> expression LT . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 86
    function_call                  shift and go to state 35

state 52

    (55) expression -> expression GT . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 87
    function_call                  shift and go to state 35

state 53

    (56) expression -> expression LTE . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 88
    function_call                  shift and go to state 35

state 54

    (57) expression -> expression GTE . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 89
    function_call                  shift and go to state 35

state 55

    (58) expression -> expression EQ . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 90
    function_call                  shift and go to state 35

state 56

    (59) expression -> expression NE . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 91
    function_call                  shift and go to state 35

state 57

    (60) expression -> expression AND . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 92
    function_call                  shift and go to state 35

state 58

    (61) expression -> expression OR . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 93
    function_call                  shift and go to state 35

state 59

    (19) declaration_statement -> type declaration_list . SEMICOLON
    (21) declaration_list -> declaration_list . COMA declaration_item

    SEMICOLON       shift and go to state 94
    COMA            shift and go to state 95


state 60

    (20) declaration_list -> declaration_item .

    SEMICOLON       reduce using rule 20 (declaration_list -> declaration_item .)
    COMA            reduce using rule 20 (declaration_list -> declaration_item .)


state 61

    (22) declaration_item -> ID .
    (23) declaration_item -> ID . ASSIGN expression
    (24) declaration_item -> ID . LBRACKET expression RBRACKET ASSIGN array_initialization
    (25) declaration_item -> ID . LBRACKET expression RBRACKET
    (26) declaration_item -> ID . ASSIGN array_initialization

    SEMICOLON       reduce using rule 22 (declaration_item -> ID .)
    COMA            reduce using rule 22 (declaration_item -> ID .)
    ASSIGN          shift and go to state 96
    LBRACKET        shift and go to state 97


state 62

    (35) print_statement -> WRITELN LPAREN . expression_list RPAREN SEMICOLON
    (30) expression_list -> . expression
    (31) expression_list -> . expression_list COMA expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression_list                shift and go to state 98
    expression                     shift and go to state 99
    function_call                  shift and go to state 35

state 63

    (63) expression -> LPAREN expression . RPAREN
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          shift and go to state 100
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 64

    (66) expression -> STRING .

    RPAREN          reduce using rule 66 (expression -> STRING .)
    PLUSPLUS        reduce using rule 66 (expression -> STRING .)
    MINUSMINUS      reduce using rule 66 (expression -> STRING .)
    PLUS            reduce using rule 66 (expression -> STRING .)
    MINUS           reduce using rule 66 (expression -> STRING .)
    TIMES           reduce using rule 66 (expression -> STRING .)
    DIVIDE          reduce using rule 66 (expression -> STRING .)
    LT              reduce using rule 66 (expression -> STRING .)
    GT              reduce using rule 66 (expression -> STRING .)
    LTE             reduce using rule 66 (expression -> STRING .)
    GTE             reduce using rule 66 (expression -> STRING .)
    EQ              reduce using rule 66 (expression -> STRING .)
    NE              reduce using rule 66 (expression -> STRING .)
    AND             reduce using rule 66 (expression -> STRING .)
    OR              reduce using rule 66 (expression -> STRING .)
    SEMICOLON       reduce using rule 66 (expression -> STRING .)
    RBRACKET        reduce using rule 66 (expression -> STRING .)
    COMA            reduce using rule 66 (expression -> STRING .)


state 65

    (67) expression -> ID .
    (71) function_call -> ID . LPAREN argument_list RPAREN

    RPAREN          reduce using rule 67 (expression -> ID .)
    PLUSPLUS        reduce using rule 67 (expression -> ID .)
    MINUSMINUS      reduce using rule 67 (expression -> ID .)
    PLUS            reduce using rule 67 (expression -> ID .)
    MINUS           reduce using rule 67 (expression -> ID .)
    TIMES           reduce using rule 67 (expression -> ID .)
    DIVIDE          reduce using rule 67 (expression -> ID .)
    LT              reduce using rule 67 (expression -> ID .)
    GT              reduce using rule 67 (expression -> ID .)
    LTE             reduce using rule 67 (expression -> ID .)
    GTE             reduce using rule 67 (expression -> ID .)
    EQ              reduce using rule 67 (expression -> ID .)
    NE              reduce using rule 67 (expression -> ID .)
    AND             reduce using rule 67 (expression -> ID .)
    OR              reduce using rule 67 (expression -> ID .)
    SEMICOLON       reduce using rule 67 (expression -> ID .)
    RBRACKET        reduce using rule 67 (expression -> ID .)
    COMA            reduce using rule 67 (expression -> ID .)
    LPAREN          shift and go to state 41


state 66

    (36) print_statement -> WRITE LPAREN . expression_list RPAREN SEMICOLON
    (30) expression_list -> . expression
    (31) expression_list -> . expression_list COMA expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression_list                shift and go to state 101
    expression                     shift and go to state 99
    function_call                  shift and go to state 35

state 67

    (37) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE optional_else
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 102
    function_call                  shift and go to state 35

state 68

    (44) while_statement -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 103
    function_call                  shift and go to state 35

state 69

    (45) for_statement -> FOR LPAREN . assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON

    ID              shift and go to state 105

    assignment_statement           shift and go to state 104

state 70

    (13) function_declaration -> FUNCTION ID . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 106


state 71

    (18) return_statement -> RETURN expression . SEMICOLON
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    SEMICOLON       shift and go to state 107
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 72

    (48) expression -> PLUSPLUS expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 48 (expression -> PLUSPLUS expression .)
    RPAREN          reduce using rule 48 (expression -> PLUSPLUS expression .)
    RBRACKET        reduce using rule 48 (expression -> PLUSPLUS expression .)
    COMA            reduce using rule 48 (expression -> PLUSPLUS expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! LT              [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! GT              [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! LTE             [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! GTE             [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! NE              [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! AND             [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]
  ! OR              [ reduce using rule 48 (expression -> PLUSPLUS expression .) ]


state 73

    (49) expression -> MINUSMINUS expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 49 (expression -> MINUSMINUS expression .)
    RPAREN          reduce using rule 49 (expression -> MINUSMINUS expression .)
    RBRACKET        reduce using rule 49 (expression -> MINUSMINUS expression .)
    COMA            reduce using rule 49 (expression -> MINUSMINUS expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! LT              [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! GT              [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! LTE             [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! GTE             [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! EQ              [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! NE              [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! AND             [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]
  ! OR              [ reduce using rule 49 (expression -> MINUSMINUS expression .) ]


state 74

    (62) expression -> NOT expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 62 (expression -> NOT expression .)
    RPAREN          reduce using rule 62 (expression -> NOT expression .)
    RBRACKET        reduce using rule 62 (expression -> NOT expression .)
    COMA            reduce using rule 62 (expression -> NOT expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 62 (expression -> NOT expression .) ]
  ! MINUSMINUS      [ reduce using rule 62 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 62 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 62 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 62 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 62 (expression -> NOT expression .) ]
  ! LTE             [ reduce using rule 62 (expression -> NOT expression .) ]
  ! GTE             [ reduce using rule 62 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 62 (expression -> NOT expression .) ]
  ! NE              [ reduce using rule 62 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 62 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 62 (expression -> NOT expression .) ]


state 75

    (79) type -> INT LBRACKET . RBRACKET

    RBRACKET        shift and go to state 108


state 76

    (80) type -> FLOAT LBRACKET . RBRACKET

    RBRACKET        shift and go to state 109


state 77

    (32) assignment_statement -> ID ASSIGN expression . SEMICOLON
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    SEMICOLON       shift and go to state 110
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 78

    (33) assignment_statement -> ID LBRACKET expression . RBRACKET ASSIGN expression SEMICOLON
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RBRACKET        shift and go to state 111
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 79

    (71) function_call -> ID LPAREN argument_list . RPAREN
    (73) argument_list -> argument_list . COMA expression

    RPAREN          shift and go to state 112
    COMA            shift and go to state 113


state 80

    (72) argument_list -> expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          reduce using rule 72 (argument_list -> expression .)
    COMA            reduce using rule 72 (argument_list -> expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 81

    (74) argument_list -> empty .

    RPAREN          reduce using rule 74 (argument_list -> empty .)
    COMA            reduce using rule 74 (argument_list -> empty .)


state 82

    (50) expression -> expression PLUS expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 50 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 50 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 50 (expression -> expression PLUS expression .)
    COMA            reduce using rule 50 (expression -> expression PLUS expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! LTE             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! GTE             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! NE              [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 50 (expression -> expression PLUS expression .) ]


state 83

    (51) expression -> expression MINUS expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 51 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 51 (expression -> expression MINUS expression .)
    COMA            reduce using rule 51 (expression -> expression MINUS expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! LTE             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! GTE             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! NE              [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression MINUS expression .) ]


state 84

    (52) expression -> expression TIMES expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 52 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 52 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 52 (expression -> expression TIMES expression .)
    COMA            reduce using rule 52 (expression -> expression TIMES expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! MINUSMINUS      [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! LTE             [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! GTE             [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! NE              [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression TIMES expression .) ]


state 85

    (53) expression -> expression DIVIDE expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 53 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 53 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 53 (expression -> expression DIVIDE expression .)
    COMA            reduce using rule 53 (expression -> expression DIVIDE expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! MINUSMINUS      [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! LTE             [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! GTE             [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! NE              [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression DIVIDE expression .) ]


state 86

    (54) expression -> expression LT expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 54 (expression -> expression LT expression .)
    RPAREN          reduce using rule 54 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 54 (expression -> expression LT expression .)
    COMA            reduce using rule 54 (expression -> expression LT expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! MINUSMINUS      [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! LTE             [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! GTE             [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression LT expression .) ]


state 87

    (55) expression -> expression GT expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 55 (expression -> expression GT expression .)
    RPAREN          reduce using rule 55 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 55 (expression -> expression GT expression .)
    COMA            reduce using rule 55 (expression -> expression GT expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! MINUSMINUS      [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! LTE             [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! GTE             [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 55 (expression -> expression GT expression .) ]


state 88

    (56) expression -> expression LTE expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 56 (expression -> expression LTE expression .)
    RPAREN          reduce using rule 56 (expression -> expression LTE expression .)
    RBRACKET        reduce using rule 56 (expression -> expression LTE expression .)
    COMA            reduce using rule 56 (expression -> expression LTE expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! MINUSMINUS      [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! PLUS            [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! LT              [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! GT              [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! LTE             [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! GTE             [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! EQ              [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! NE              [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! AND             [ reduce using rule 56 (expression -> expression LTE expression .) ]
  ! OR              [ reduce using rule 56 (expression -> expression LTE expression .) ]


state 89

    (57) expression -> expression GTE expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 57 (expression -> expression GTE expression .)
    RPAREN          reduce using rule 57 (expression -> expression GTE expression .)
    RBRACKET        reduce using rule 57 (expression -> expression GTE expression .)
    COMA            reduce using rule 57 (expression -> expression GTE expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! MINUSMINUS      [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! PLUS            [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! LT              [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! GT              [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! LTE             [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! GTE             [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! EQ              [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! NE              [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression GTE expression .) ]
  ! OR              [ reduce using rule 57 (expression -> expression GTE expression .) ]


state 90

    (58) expression -> expression EQ expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 58 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 58 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 58 (expression -> expression EQ expression .)
    COMA            reduce using rule 58 (expression -> expression EQ expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! LTE             [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! GTE             [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 58 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 58 (expression -> expression EQ expression .) ]


state 91

    (59) expression -> expression NE expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 59 (expression -> expression NE expression .)
    RPAREN          reduce using rule 59 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 59 (expression -> expression NE expression .)
    COMA            reduce using rule 59 (expression -> expression NE expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! MINUSMINUS      [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! PLUS            [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! LTE             [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! GTE             [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression NE expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression NE expression .) ]


state 92

    (60) expression -> expression AND expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 60 (expression -> expression AND expression .)
    RPAREN          reduce using rule 60 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 60 (expression -> expression AND expression .)
    COMA            reduce using rule 60 (expression -> expression AND expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! MINUSMINUS      [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! LTE             [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! GTE             [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 60 (expression -> expression AND expression .) ]


state 93

    (61) expression -> expression OR expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 61 (expression -> expression OR expression .)
    RPAREN          reduce using rule 61 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 61 (expression -> expression OR expression .)
    COMA            reduce using rule 61 (expression -> expression OR expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58

  ! PLUSPLUS        [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! MINUSMINUS      [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! LTE             [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! GTE             [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 61 (expression -> expression OR expression .) ]


state 94

    (19) declaration_statement -> type declaration_list SEMICOLON .

    RBRACE          reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    ID              reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    WRITELN         reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    WRITE           reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    IF              reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    WHILE           reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    FOR             reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    FUNCTION        reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    RETURN          reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    PLUSPLUS        reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    MINUSMINUS      reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    NOT             reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    LPAREN          reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    VAR_INT         reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    VAR_FLOAT       reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    STRING          reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    TRUE            reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    FALSE           reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    INT             reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    FLOAT           reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)
    BOOL            reduce using rule 19 (declaration_statement -> type declaration_list SEMICOLON .)


state 95

    (21) declaration_list -> declaration_list COMA . declaration_item
    (22) declaration_item -> . ID
    (23) declaration_item -> . ID ASSIGN expression
    (24) declaration_item -> . ID LBRACKET expression RBRACKET ASSIGN array_initialization
    (25) declaration_item -> . ID LBRACKET expression RBRACKET
    (26) declaration_item -> . ID ASSIGN array_initialization

    ID              shift and go to state 61

    declaration_item               shift and go to state 114

state 96

    (23) declaration_item -> ID ASSIGN . expression
    (26) declaration_item -> ID ASSIGN . array_initialization
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (27) array_initialization -> . LBRACKET value_list RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    LBRACKET        shift and go to state 117

    expression                     shift and go to state 115
    array_initialization           shift and go to state 116
    function_call                  shift and go to state 35

state 97

    (24) declaration_item -> ID LBRACKET . expression RBRACKET ASSIGN array_initialization
    (25) declaration_item -> ID LBRACKET . expression RBRACKET
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 118
    function_call                  shift and go to state 35

state 98

    (35) print_statement -> WRITELN LPAREN expression_list . RPAREN SEMICOLON
    (31) expression_list -> expression_list . COMA expression

    RPAREN          shift and go to state 119
    COMA            shift and go to state 120


state 99

    (30) expression_list -> expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          reduce using rule 30 (expression_list -> expression .)
    COMA            reduce using rule 30 (expression_list -> expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 100

    (63) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LTE             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    GTE             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    COMA            reduce using rule 63 (expression -> LPAREN expression RPAREN .)


state 101

    (36) print_statement -> WRITE LPAREN expression_list . RPAREN SEMICOLON
    (31) expression_list -> expression_list . COMA expression

    RPAREN          shift and go to state 121
    COMA            shift and go to state 120


state 102

    (37) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE optional_else
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          shift and go to state 122
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 103

    (44) while_statement -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          shift and go to state 123
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 104

    (45) for_statement -> FOR LPAREN assignment_statement . expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 124
    function_call                  shift and go to state 35

state 105

    (32) assignment_statement -> ID . ASSIGN expression SEMICOLON
    (33) assignment_statement -> ID . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 39
    LBRACKET        shift and go to state 40


state 106

    (13) function_declaration -> FUNCTION ID LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    (14) parameter_list -> . parameter
    (15) parameter_list -> . parameter_list COMA parameter
    (16) parameter_list -> . empty
    (17) parameter -> . type ID
    (81) empty -> .
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET

    RPAREN          reduce using rule 81 (empty -> .)
    COMA            reduce using rule 81 (empty -> .)
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 129

    parameter_list                 shift and go to state 125
    parameter                      shift and go to state 126
    empty                          shift and go to state 127
    type                           shift and go to state 128

state 107

    (18) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    WRITELN         reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    WRITE           reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    FUNCTION        reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    VAR_INT         reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)


state 108

    (79) type -> INT LBRACKET RBRACKET .

    ID              reduce using rule 79 (type -> INT LBRACKET RBRACKET .)


state 109

    (80) type -> FLOAT LBRACKET RBRACKET .

    ID              reduce using rule 80 (type -> FLOAT LBRACKET RBRACKET .)


state 110

    (32) assignment_statement -> ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    WRITELN         reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    FUNCTION        reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    NOT             reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    VAR_INT         reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 32 (assignment_statement -> ID ASSIGN expression SEMICOLON .)


state 111

    (33) assignment_statement -> ID LBRACKET expression RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 130


state 112

    (71) function_call -> ID LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    PLUSPLUS        reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    MINUSMINUS      reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    LTE             reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    GTE             reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    EQ              reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    NE              reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)
    COMA            reduce using rule 71 (function_call -> ID LPAREN argument_list RPAREN .)


state 113

    (73) argument_list -> argument_list COMA . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 131
    function_call                  shift and go to state 35

state 114

    (21) declaration_list -> declaration_list COMA declaration_item .

    SEMICOLON       reduce using rule 21 (declaration_list -> declaration_list COMA declaration_item .)
    COMA            reduce using rule 21 (declaration_list -> declaration_list COMA declaration_item .)


state 115

    (23) declaration_item -> ID ASSIGN expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    SEMICOLON       reduce using rule 23 (declaration_item -> ID ASSIGN expression .)
    COMA            reduce using rule 23 (declaration_item -> ID ASSIGN expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 116

    (26) declaration_item -> ID ASSIGN array_initialization .

    SEMICOLON       reduce using rule 26 (declaration_item -> ID ASSIGN array_initialization .)
    COMA            reduce using rule 26 (declaration_item -> ID ASSIGN array_initialization .)


state 117

    (27) array_initialization -> LBRACKET . value_list RBRACKET
    (28) value_list -> . expression
    (29) value_list -> . value_list COMA expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    value_list                     shift and go to state 132
    expression                     shift and go to state 133
    function_call                  shift and go to state 35

state 118

    (24) declaration_item -> ID LBRACKET expression . RBRACKET ASSIGN array_initialization
    (25) declaration_item -> ID LBRACKET expression . RBRACKET
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RBRACKET        shift and go to state 134
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 119

    (35) print_statement -> WRITELN LPAREN expression_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 135


state 120

    (31) expression_list -> expression_list COMA . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 136
    function_call                  shift and go to state 35

state 121

    (36) print_statement -> WRITE LPAREN expression_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 137


state 122

    (37) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE optional_else

    LBRACE          shift and go to state 138


state 123

    (44) while_statement -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 139


state 124

    (45) for_statement -> FOR LPAREN assignment_statement expression . SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    SEMICOLON       shift and go to state 140
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 125

    (13) function_declaration -> FUNCTION ID LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    (15) parameter_list -> parameter_list . COMA parameter

    RPAREN          shift and go to state 141
    COMA            shift and go to state 142


state 126

    (14) parameter_list -> parameter .

    RPAREN          reduce using rule 14 (parameter_list -> parameter .)
    COMA            reduce using rule 14 (parameter_list -> parameter .)


state 127

    (16) parameter_list -> empty .

    RPAREN          reduce using rule 16 (parameter_list -> empty .)
    COMA            reduce using rule 16 (parameter_list -> empty .)


state 128

    (17) parameter -> type . ID

    ID              shift and go to state 143


state 129

    (78) type -> STRING .

    ID              reduce using rule 78 (type -> STRING .)


state 130

    (33) assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN . expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 144
    function_call                  shift and go to state 35

state 131

    (73) argument_list -> argument_list COMA expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          reduce using rule 73 (argument_list -> argument_list COMA expression .)
    COMA            reduce using rule 73 (argument_list -> argument_list COMA expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 132

    (27) array_initialization -> LBRACKET value_list . RBRACKET
    (29) value_list -> value_list . COMA expression

    RBRACKET        shift and go to state 145
    COMA            shift and go to state 146


state 133

    (28) value_list -> expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RBRACKET        reduce using rule 28 (value_list -> expression .)
    COMA            reduce using rule 28 (value_list -> expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 134

    (24) declaration_item -> ID LBRACKET expression RBRACKET . ASSIGN array_initialization
    (25) declaration_item -> ID LBRACKET expression RBRACKET .

    ASSIGN          shift and go to state 147
    SEMICOLON       reduce using rule 25 (declaration_item -> ID LBRACKET expression RBRACKET .)
    COMA            reduce using rule 25 (declaration_item -> ID LBRACKET expression RBRACKET .)


state 135

    (35) print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    ID              reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    WRITELN         reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    WRITE           reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    NOT             reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    VAR_FLOAT       reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    STRING          reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    TRUE            reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    FALSE           reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    INT             reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)
    BOOL            reduce using rule 35 (print_statement -> WRITELN LPAREN expression_list RPAREN SEMICOLON .)


state 136

    (31) expression_list -> expression_list COMA expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          reduce using rule 31 (expression_list -> expression_list COMA expression .)
    COMA            reduce using rule 31 (expression_list -> expression_list COMA expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 137

    (36) print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    ID              reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    WRITELN         reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    WRITE           reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    NOT             reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    VAR_FLOAT       reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    STRING          reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    TRUE            reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    FALSE           reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    INT             reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)
    BOOL            reduce using rule 36 (print_statement -> WRITE LPAREN expression_list RPAREN SEMICOLON .)


state 138

    (37) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE else_if_list optional_else
    (38) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE optional_else
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement_list                 shift and go to state 148
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 139

    (44) while_statement -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement_list                 shift and go to state 149
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 140

    (45) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON . expression RPAREN LBRACE statement_list RBRACE
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 150
    function_call                  shift and go to state 35

state 141

    (13) function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 151


state 142

    (15) parameter_list -> parameter_list COMA . parameter
    (17) parameter -> . type ID
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 129

    parameter                      shift and go to state 152
    type                           shift and go to state 128

state 143

    (17) parameter -> type ID .

    RPAREN          reduce using rule 17 (parameter -> type ID .)
    COMA            reduce using rule 17 (parameter -> type ID .)


state 144

    (33) assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression . SEMICOLON
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    SEMICOLON       shift and go to state 153
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 145

    (27) array_initialization -> LBRACKET value_list RBRACKET .

    SEMICOLON       reduce using rule 27 (array_initialization -> LBRACKET value_list RBRACKET .)
    COMA            reduce using rule 27 (array_initialization -> LBRACKET value_list RBRACKET .)


state 146

    (29) value_list -> value_list COMA . expression
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 154
    function_call                  shift and go to state 35

state 147

    (24) declaration_item -> ID LBRACKET expression RBRACKET ASSIGN . array_initialization
    (27) array_initialization -> . LBRACKET value_list RBRACKET

    LBRACKET        shift and go to state 117

    array_initialization           shift and go to state 155

state 148

    (37) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE else_if_list optional_else
    (38) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE optional_else
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 156
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 149

    (44) while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 157
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 150

    (45) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression . RPAREN LBRACE statement_list RBRACE
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          shift and go to state 158
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 151

    (13) function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    statement_list                 shift and go to state 159
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    expression                     shift and go to state 17
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 152

    (15) parameter_list -> parameter_list COMA parameter .

    RPAREN          reduce using rule 15 (parameter_list -> parameter_list COMA parameter .)
    COMA            reduce using rule 15 (parameter_list -> parameter_list COMA parameter .)


state 153

    (33) assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    ID              reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    WRITELN         reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FUNCTION        reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    NOT             reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    VAR_INT         reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    INT             reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 33 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)


state 154

    (29) value_list -> value_list COMA expression .
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RBRACKET        reduce using rule 29 (value_list -> value_list COMA expression .)
    COMA            reduce using rule 29 (value_list -> value_list COMA expression .)
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 155

    (24) declaration_item -> ID LBRACKET expression RBRACKET ASSIGN array_initialization .

    SEMICOLON       reduce using rule 24 (declaration_item -> ID LBRACKET expression RBRACKET ASSIGN array_initialization .)
    COMA            reduce using rule 24 (declaration_item -> ID LBRACKET expression RBRACKET ASSIGN array_initialization .)


state 156

    (37) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . else_if_list optional_else
    (38) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . optional_else
    (39) else_if_list -> . else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (40) else_if_list -> . ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (41) else_if_list -> . empty
    (42) optional_else -> . ELSE LBRACE statement_list RBRACE
    (43) optional_else -> . empty
    (81) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 162
    RBRACE          reduce using rule 81 (empty -> .)
    ID              reduce using rule 81 (empty -> .)
    WRITELN         reduce using rule 81 (empty -> .)
    WRITE           reduce using rule 81 (empty -> .)
    IF              reduce using rule 81 (empty -> .)
    WHILE           reduce using rule 81 (empty -> .)
    FOR             reduce using rule 81 (empty -> .)
    FUNCTION        reduce using rule 81 (empty -> .)
    RETURN          reduce using rule 81 (empty -> .)
    PLUSPLUS        reduce using rule 81 (empty -> .)
    MINUSMINUS      reduce using rule 81 (empty -> .)
    NOT             reduce using rule 81 (empty -> .)
    LPAREN          reduce using rule 81 (empty -> .)
    VAR_INT         reduce using rule 81 (empty -> .)
    VAR_FLOAT       reduce using rule 81 (empty -> .)
    STRING          reduce using rule 81 (empty -> .)
    TRUE            reduce using rule 81 (empty -> .)
    FALSE           reduce using rule 81 (empty -> .)
    INT             reduce using rule 81 (empty -> .)
    FLOAT           reduce using rule 81 (empty -> .)
    BOOL            reduce using rule 81 (empty -> .)

  ! ELSE            [ reduce using rule 81 (empty -> .) ]

    else_if_list                   shift and go to state 160
    optional_else                  shift and go to state 161
    empty                          shift and go to state 163

state 157

    (44) while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WRITELN         reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR_INT         reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR_FLOAT       reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 158

    (45) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 164


state 159

    (13) function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 165
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    expression                     shift and go to state 17
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 160

    (37) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list . optional_else
    (39) else_if_list -> else_if_list . ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) optional_else -> . ELSE LBRACE statement_list RBRACE
    (43) optional_else -> . empty
    (81) empty -> .

    ELSE            shift and go to state 167
    RBRACE          reduce using rule 81 (empty -> .)
    ID              reduce using rule 81 (empty -> .)
    WRITELN         reduce using rule 81 (empty -> .)
    WRITE           reduce using rule 81 (empty -> .)
    IF              reduce using rule 81 (empty -> .)
    WHILE           reduce using rule 81 (empty -> .)
    FOR             reduce using rule 81 (empty -> .)
    FUNCTION        reduce using rule 81 (empty -> .)
    RETURN          reduce using rule 81 (empty -> .)
    PLUSPLUS        reduce using rule 81 (empty -> .)
    MINUSMINUS      reduce using rule 81 (empty -> .)
    NOT             reduce using rule 81 (empty -> .)
    LPAREN          reduce using rule 81 (empty -> .)
    VAR_INT         reduce using rule 81 (empty -> .)
    VAR_FLOAT       reduce using rule 81 (empty -> .)
    STRING          reduce using rule 81 (empty -> .)
    TRUE            reduce using rule 81 (empty -> .)
    FALSE           reduce using rule 81 (empty -> .)
    INT             reduce using rule 81 (empty -> .)
    FLOAT           reduce using rule 81 (empty -> .)
    BOOL            reduce using rule 81 (empty -> .)

    optional_else                  shift and go to state 166
    empty                          shift and go to state 168

state 161

    (38) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .

    RBRACE          reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    ID              reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    WRITELN         reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    WRITE           reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    IF              reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    WHILE           reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    FOR             reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    FUNCTION        reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    RETURN          reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    PLUSPLUS        reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    MINUSMINUS      reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    NOT             reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    LPAREN          reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    VAR_INT         reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    VAR_FLOAT       reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    STRING          reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    TRUE            reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    FALSE           reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    INT             reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    FLOAT           reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)
    BOOL            reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else .)


state 162

    (40) else_if_list -> ELSE . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) optional_else -> ELSE . LBRACE statement_list RBRACE

    IF              shift and go to state 169
    LBRACE          shift and go to state 170


state 163

    (41) else_if_list -> empty .
    (43) optional_else -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for WRITELN resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for NOT resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for VAR_INT resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for VAR_FLOAT resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for STRING resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for TRUE resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for FALSE resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (else_if_list -> empty .)
  ! reduce/reduce conflict for BOOL resolved using rule 41 (else_if_list -> empty .)
    ELSE            reduce using rule 41 (else_if_list -> empty .)
    RBRACE          reduce using rule 41 (else_if_list -> empty .)
    ID              reduce using rule 41 (else_if_list -> empty .)
    WRITELN         reduce using rule 41 (else_if_list -> empty .)
    WRITE           reduce using rule 41 (else_if_list -> empty .)
    IF              reduce using rule 41 (else_if_list -> empty .)
    WHILE           reduce using rule 41 (else_if_list -> empty .)
    FOR             reduce using rule 41 (else_if_list -> empty .)
    FUNCTION        reduce using rule 41 (else_if_list -> empty .)
    RETURN          reduce using rule 41 (else_if_list -> empty .)
    PLUSPLUS        reduce using rule 41 (else_if_list -> empty .)
    MINUSMINUS      reduce using rule 41 (else_if_list -> empty .)
    NOT             reduce using rule 41 (else_if_list -> empty .)
    LPAREN          reduce using rule 41 (else_if_list -> empty .)
    VAR_INT         reduce using rule 41 (else_if_list -> empty .)
    VAR_FLOAT       reduce using rule 41 (else_if_list -> empty .)
    STRING          reduce using rule 41 (else_if_list -> empty .)
    TRUE            reduce using rule 41 (else_if_list -> empty .)
    FALSE           reduce using rule 41 (else_if_list -> empty .)
    INT             reduce using rule 41 (else_if_list -> empty .)
    FLOAT           reduce using rule 41 (else_if_list -> empty .)
    BOOL            reduce using rule 41 (else_if_list -> empty .)

  ! RBRACE          [ reduce using rule 43 (optional_else -> empty .) ]
  ! ID              [ reduce using rule 43 (optional_else -> empty .) ]
  ! WRITELN         [ reduce using rule 43 (optional_else -> empty .) ]
  ! WRITE           [ reduce using rule 43 (optional_else -> empty .) ]
  ! IF              [ reduce using rule 43 (optional_else -> empty .) ]
  ! WHILE           [ reduce using rule 43 (optional_else -> empty .) ]
  ! FOR             [ reduce using rule 43 (optional_else -> empty .) ]
  ! FUNCTION        [ reduce using rule 43 (optional_else -> empty .) ]
  ! RETURN          [ reduce using rule 43 (optional_else -> empty .) ]
  ! PLUSPLUS        [ reduce using rule 43 (optional_else -> empty .) ]
  ! MINUSMINUS      [ reduce using rule 43 (optional_else -> empty .) ]
  ! NOT             [ reduce using rule 43 (optional_else -> empty .) ]
  ! LPAREN          [ reduce using rule 43 (optional_else -> empty .) ]
  ! VAR_INT         [ reduce using rule 43 (optional_else -> empty .) ]
  ! VAR_FLOAT       [ reduce using rule 43 (optional_else -> empty .) ]
  ! STRING          [ reduce using rule 43 (optional_else -> empty .) ]
  ! TRUE            [ reduce using rule 43 (optional_else -> empty .) ]
  ! FALSE           [ reduce using rule 43 (optional_else -> empty .) ]
  ! INT             [ reduce using rule 43 (optional_else -> empty .) ]
  ! FLOAT           [ reduce using rule 43 (optional_else -> empty .) ]
  ! BOOL            [ reduce using rule 43 (optional_else -> empty .) ]


state 164

    (45) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    assignment_statement           shift and go to state 10
    expression                     shift and go to state 17
    statement_list                 shift and go to state 171
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 165

    (13) function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    WRITELN         reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    VAR_INT         reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    VAR_FLOAT       reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 13 (function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)


state 166

    (37) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .

    RBRACE          reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    ID              reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    WRITELN         reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    WRITE           reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    IF              reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    WHILE           reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    FOR             reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    FUNCTION        reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    RETURN          reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    PLUSPLUS        reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    MINUSMINUS      reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    NOT             reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    LPAREN          reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    VAR_INT         reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    VAR_FLOAT       reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    STRING          reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    TRUE            reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    FALSE           reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    INT             reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    FLOAT           reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)
    BOOL            reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else .)


state 167

    (39) else_if_list -> else_if_list ELSE . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (42) optional_else -> ELSE . LBRACE statement_list RBRACE

    IF              shift and go to state 172
    LBRACE          shift and go to state 170


state 168

    (43) optional_else -> empty .

    RBRACE          reduce using rule 43 (optional_else -> empty .)
    ID              reduce using rule 43 (optional_else -> empty .)
    WRITELN         reduce using rule 43 (optional_else -> empty .)
    WRITE           reduce using rule 43 (optional_else -> empty .)
    IF              reduce using rule 43 (optional_else -> empty .)
    WHILE           reduce using rule 43 (optional_else -> empty .)
    FOR             reduce using rule 43 (optional_else -> empty .)
    FUNCTION        reduce using rule 43 (optional_else -> empty .)
    RETURN          reduce using rule 43 (optional_else -> empty .)
    PLUSPLUS        reduce using rule 43 (optional_else -> empty .)
    MINUSMINUS      reduce using rule 43 (optional_else -> empty .)
    NOT             reduce using rule 43 (optional_else -> empty .)
    LPAREN          reduce using rule 43 (optional_else -> empty .)
    VAR_INT         reduce using rule 43 (optional_else -> empty .)
    VAR_FLOAT       reduce using rule 43 (optional_else -> empty .)
    STRING          reduce using rule 43 (optional_else -> empty .)
    TRUE            reduce using rule 43 (optional_else -> empty .)
    FALSE           reduce using rule 43 (optional_else -> empty .)
    INT             reduce using rule 43 (optional_else -> empty .)
    FLOAT           reduce using rule 43 (optional_else -> empty .)
    BOOL            reduce using rule 43 (optional_else -> empty .)


state 169

    (40) else_if_list -> ELSE IF . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 173


state 170

    (42) optional_else -> ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    statement_list                 shift and go to state 174
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    expression                     shift and go to state 17
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 171

    (45) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 175
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    assignment_statement           shift and go to state 10
    expression                     shift and go to state 17
    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 172

    (39) else_if_list -> else_if_list ELSE IF . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 176


state 173

    (40) else_if_list -> ELSE IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 177
    function_call                  shift and go to state 35

state 174

    (42) optional_else -> ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 178
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    expression                     shift and go to state 17
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 175

    (45) for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    WRITELN         reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    VAR_INT         reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    VAR_FLOAT       reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 45 (for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE .)


state 176

    (39) else_if_list -> else_if_list ELSE IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (71) function_call -> . ID LPAREN argument_list RPAREN

    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 64
    ID              shift and go to state 65
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expression                     shift and go to state 179
    function_call                  shift and go to state 35

state 177

    (40) else_if_list -> ELSE IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          shift and go to state 180
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 178

    (42) optional_else -> ELSE LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    WRITELN         reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    NOT             reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    VAR_INT         reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    VAR_FLOAT       reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    STRING          reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    INT             reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 42 (optional_else -> ELSE LBRACE statement_list RBRACE .)


state 179

    (39) else_if_list -> else_if_list ELSE IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (46) expression -> expression . PLUSPLUS
    (47) expression -> expression . MINUSMINUS
    (50) expression -> expression . PLUS expression
    (51) expression -> expression . MINUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . DIVIDE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTE expression
    (57) expression -> expression . GTE expression
    (58) expression -> expression . EQ expression
    (59) expression -> expression . NE expression
    (60) expression -> expression . AND expression
    (61) expression -> expression . OR expression

    RPAREN          shift and go to state 181
    PLUSPLUS        shift and go to state 45
    MINUSMINUS      shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    LT              shift and go to state 51
    GT              shift and go to state 52
    LTE             shift and go to state 53
    GTE             shift and go to state 54
    EQ              shift and go to state 55
    NE              shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58


state 180

    (40) else_if_list -> ELSE IF LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 182


state 181

    (39) else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 183


state 182

    (40) else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement_list                 shift and go to state 184
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 183

    (39) else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement_list                 shift and go to state 185
    statement                      shift and go to state 7
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 184

    (40) else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 186
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 185

    (39) else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . declaration_statement
    (6) statement -> . assignment_statement
    (7) statement -> . print_statement
    (8) statement -> . if_statement
    (9) statement -> . while_statement
    (10) statement -> . for_statement
    (11) statement -> . function_declaration
    (12) statement -> . return_statement
    (34) expression_statement -> . expression SEMICOLON
    (19) declaration_statement -> . type declaration_list SEMICOLON
    (32) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (33) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (35) print_statement -> . WRITELN LPAREN expression_list RPAREN SEMICOLON
    (36) print_statement -> . WRITE LPAREN expression_list RPAREN SEMICOLON
    (37) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_if_list optional_else
    (38) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE optional_else
    (44) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (45) for_statement -> . FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE
    (13) function_declaration -> . FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (18) return_statement -> . RETURN expression SEMICOLON
    (46) expression -> . expression PLUSPLUS
    (47) expression -> . expression MINUSMINUS
    (48) expression -> . PLUSPLUS expression
    (49) expression -> . MINUSMINUS expression
    (50) expression -> . expression PLUS expression
    (51) expression -> . expression MINUS expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression DIVIDE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTE expression
    (57) expression -> . expression GTE expression
    (58) expression -> . expression EQ expression
    (59) expression -> . expression NE expression
    (60) expression -> . expression AND expression
    (61) expression -> . expression OR expression
    (62) expression -> . NOT expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . VAR_INT
    (65) expression -> . VAR_FLOAT
    (66) expression -> . STRING
    (67) expression -> . ID
    (68) expression -> . TRUE
    (69) expression -> . FALSE
    (70) expression -> . function_call
    (75) type -> . INT
    (76) type -> . FLOAT
    (77) type -> . BOOL
    (78) type -> . STRING
    (79) type -> . INT LBRACKET RBRACKET
    (80) type -> . FLOAT LBRACKET RBRACKET
    (71) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 187
    ID              shift and go to state 5
    WRITELN         shift and go to state 19
    WRITE           shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    PLUSPLUS        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    NOT             shift and go to state 29
    LPAREN          shift and go to state 20
    VAR_INT         shift and go to state 30
    VAR_FLOAT       shift and go to state 31
    STRING          shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    BOOL            shift and go to state 38

    expression                     shift and go to state 17
    statement                      shift and go to state 43
    expression_statement           shift and go to state 8
    declaration_statement          shift and go to state 9
    assignment_statement           shift and go to state 10
    print_statement                shift and go to state 11
    if_statement                   shift and go to state 12
    while_statement                shift and go to state 13
    for_statement                  shift and go to state 14
    function_declaration           shift and go to state 15
    return_statement               shift and go to state 16
    type                           shift and go to state 18
    function_call                  shift and go to state 35

state 186

    (40) else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .

    ELSE            reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WRITELN         reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR_INT         reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR_FLOAT       reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 40 (else_if_list -> ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 187

    (39) else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .

    ELSE            reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WRITELN         reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WRITE           reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR_INT         reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    VAR_FLOAT       reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 39 (else_if_list -> else_if_list ELSE IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUSPLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for LT in state 72 resolved as shift
WARNING: shift/reduce conflict for GT in state 72 resolved as shift
WARNING: shift/reduce conflict for LTE in state 72 resolved as shift
WARNING: shift/reduce conflict for GTE in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NE in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for LT in state 73 resolved as shift
WARNING: shift/reduce conflict for GT in state 73 resolved as shift
WARNING: shift/reduce conflict for LTE in state 73 resolved as shift
WARNING: shift/reduce conflict for GTE in state 73 resolved as shift
WARNING: shift/reduce conflict for EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NE in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for LT in state 74 resolved as shift
WARNING: shift/reduce conflict for GT in state 74 resolved as shift
WARNING: shift/reduce conflict for LTE in state 74 resolved as shift
WARNING: shift/reduce conflict for GTE in state 74 resolved as shift
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NE in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for LT in state 82 resolved as shift
WARNING: shift/reduce conflict for GT in state 82 resolved as shift
WARNING: shift/reduce conflict for LTE in state 82 resolved as shift
WARNING: shift/reduce conflict for GTE in state 82 resolved as shift
WARNING: shift/reduce conflict for EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NE in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for LT in state 83 resolved as shift
WARNING: shift/reduce conflict for GT in state 83 resolved as shift
WARNING: shift/reduce conflict for LTE in state 83 resolved as shift
WARNING: shift/reduce conflict for GTE in state 83 resolved as shift
WARNING: shift/reduce conflict for EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NE in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for LT in state 84 resolved as shift
WARNING: shift/reduce conflict for GT in state 84 resolved as shift
WARNING: shift/reduce conflict for LTE in state 84 resolved as shift
WARNING: shift/reduce conflict for GTE in state 84 resolved as shift
WARNING: shift/reduce conflict for EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for NE in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 85 resolved as shift
WARNING: shift/reduce conflict for LT in state 85 resolved as shift
WARNING: shift/reduce conflict for GT in state 85 resolved as shift
WARNING: shift/reduce conflict for LTE in state 85 resolved as shift
WARNING: shift/reduce conflict for GTE in state 85 resolved as shift
WARNING: shift/reduce conflict for EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NE in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 86 resolved as shift
WARNING: shift/reduce conflict for LT in state 86 resolved as shift
WARNING: shift/reduce conflict for GT in state 86 resolved as shift
WARNING: shift/reduce conflict for LTE in state 86 resolved as shift
WARNING: shift/reduce conflict for GTE in state 86 resolved as shift
WARNING: shift/reduce conflict for EQ in state 86 resolved as shift
WARNING: shift/reduce conflict for NE in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for LT in state 87 resolved as shift
WARNING: shift/reduce conflict for GT in state 87 resolved as shift
WARNING: shift/reduce conflict for LTE in state 87 resolved as shift
WARNING: shift/reduce conflict for GTE in state 87 resolved as shift
WARNING: shift/reduce conflict for EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for NE in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for LTE in state 88 resolved as shift
WARNING: shift/reduce conflict for GTE in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for NE in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for LT in state 89 resolved as shift
WARNING: shift/reduce conflict for GT in state 89 resolved as shift
WARNING: shift/reduce conflict for LTE in state 89 resolved as shift
WARNING: shift/reduce conflict for GTE in state 89 resolved as shift
WARNING: shift/reduce conflict for EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for NE in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for LT in state 90 resolved as shift
WARNING: shift/reduce conflict for GT in state 90 resolved as shift
WARNING: shift/reduce conflict for LTE in state 90 resolved as shift
WARNING: shift/reduce conflict for GTE in state 90 resolved as shift
WARNING: shift/reduce conflict for EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for NE in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for LT in state 91 resolved as shift
WARNING: shift/reduce conflict for GT in state 91 resolved as shift
WARNING: shift/reduce conflict for LTE in state 91 resolved as shift
WARNING: shift/reduce conflict for GTE in state 91 resolved as shift
WARNING: shift/reduce conflict for EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for NE in state 91 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 92 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 92 resolved as shift
WARNING: shift/reduce conflict for LT in state 92 resolved as shift
WARNING: shift/reduce conflict for GT in state 92 resolved as shift
WARNING: shift/reduce conflict for LTE in state 92 resolved as shift
WARNING: shift/reduce conflict for GTE in state 92 resolved as shift
WARNING: shift/reduce conflict for EQ in state 92 resolved as shift
WARNING: shift/reduce conflict for NE in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 92 resolved as shift
WARNING: shift/reduce conflict for OR in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for LT in state 93 resolved as shift
WARNING: shift/reduce conflict for GT in state 93 resolved as shift
WARNING: shift/reduce conflict for LTE in state 93 resolved as shift
WARNING: shift/reduce conflict for GTE in state 93 resolved as shift
WARNING: shift/reduce conflict for EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for NE in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 156 resolved as shift
WARNING: reduce/reduce conflict in state 163 resolved using rule (else_if_list -> empty)
WARNING: rejected rule (optional_else -> empty) in state 163
