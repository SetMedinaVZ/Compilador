   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'main',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(LBRACE,'{',1,12)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID LBRACE . LexToken(INT,'int',2,18)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID LBRACE INT . LexToken(ID,'f',2,22)
   yacc.py: 469:Action : Reduce rule [type -> INT] with ['int'] and goto state 16
   yacc.py: 506:Result : <str @ 0x104596cb0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type . LexToken(ID,'f',2,22)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type ID . LexToken(COMA,',',2,23)
   yacc.py: 469:Action : Reduce rule [declaration_item -> ID] with ['f'] and goto state 48
   yacc.py: 506:Result : <tuple @ 0x104594d40> (('f', None))
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_item . LexToken(COMA,',',2,23)
   yacc.py: 469:Action : Reduce rule [declaration_list -> declaration_item] with [('f', None)] and goto state 47
   yacc.py: 506:Result : <list @ 0x1045aab80> ([('f', None)])
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list . LexToken(COMA,',',2,23)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list COMA . LexToken(ID,'x',2,24)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list COMA ID . LexToken(SEMICOLON,';',2,25)
   yacc.py: 469:Action : Reduce rule [declaration_item -> ID] with ['x'] and goto state 85
   yacc.py: 506:Result : <tuple @ 0x104594940> (('x', None))
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list COMA declaration_item . LexToken(SEMICOLON,';',2,25)
   yacc.py: 469:Action : Reduce rule [declaration_list -> declaration_list COMA declaration_item] with [[('f', None)],',',('x', None)] and goto state 47
   yacc.py: 506:Result : <list @ 0x1045aab00> ([('f', None), ('x', None)])
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list . LexToken(SEMICOLON,';',2,25)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list SEMICOLON . LexToken(ID,'f',3,31)
   yacc.py: 469:Action : Reduce rule [declaration_statement -> type declaration_list SEMICOLON] with ['int',<list @ 0x1045aab00>,';'] and goto state 9
   yacc.py: 506:Result : <tuple @ 0x104597180> (('declaration', 'int', [('f', None), ('x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID LBRACE declaration_statement . LexToken(ID,'f',3,31)
   yacc.py: 469:Action : Reduce rule [statement -> declaration_statement] with [<tuple @ 0x104597180>] and goto state 7
   yacc.py: 506:Result : <tuple @ 0x104597180> (('declaration', 'int', [('f', None), ('x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement . LexToken(ID,'f',3,31)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement] with [<tuple @ 0x104597180>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045aabc0> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(ID,'f',3,31)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID . LexToken(ASSIGN,'=',3,33)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN . LexToken(VAR_INT,1,3,35)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN VAR_INT . LexToken(SEMICOLON,';',3,36)
   yacc.py: 469:Action : Reduce rule [expression -> VAR_INT] with [1] and goto state 60
   yacc.py: 506:Result : <int @ 0x10575a940> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression . LexToken(SEMICOLON,';',3,36)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression SEMICOLON . LexToken(ID,'x',4,42)
   yacc.py: 469:Action : Reduce rule [assignment_statement -> ID ASSIGN expression SEMICOLON] with ['f','=',1,';'] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1045970c0> (('assignment', 'f', 1))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list assignment_statement . LexToken(ID,'x',4,42)
   yacc.py: 469:Action : Reduce rule [statement -> assignment_statement] with [<tuple @ 0x1045970c0>] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x1045970c0> (('assignment', 'f', 1))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(ID,'x',4,42)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045aabc0>,<tuple @ 0x1045970c0>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045aaac0> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(ID,'x',4,42)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID . LexToken(ASSIGN,'=',4,44)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN . LexToken(VAR_INT,5,4,46)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN VAR_INT . LexToken(SEMICOLON,';',4,47)
   yacc.py: 469:Action : Reduce rule [expression -> VAR_INT] with [5] and goto state 60
   yacc.py: 506:Result : <int @ 0x10575a9c0> (5)
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression . LexToken(SEMICOLON,';',4,47)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression SEMICOLON . LexToken(ID,'x',5,53)
   yacc.py: 469:Action : Reduce rule [assignment_statement -> ID ASSIGN expression SEMICOLON] with ['x','=',5,';'] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1045a0180> (('assignment', 'x', 5))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list assignment_statement . LexToken(ID,'x',5,53)
   yacc.py: 469:Action : Reduce rule [statement -> assignment_statement] with [<tuple @ 0x1045a0180>] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x1045a0180> (('assignment', 'x', 5))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(ID,'x',5,53)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045aaac0>,<tuple @ 0x1045a0180>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045aab80> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(ID,'x',5,53)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID . LexToken(ASSIGN,'=',5,55)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN . LexToken(STRING,'"string"',5,57)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN STRING . LexToken(SEMICOLON,';',5,65)
   yacc.py: 469:Action : Reduce rule [expression -> STRING] with ['"string"'] and goto state 60
   yacc.py: 506:Result : <str @ 0x1045ab130> ('"string"')
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression . LexToken(SEMICOLON,';',5,65)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression SEMICOLON . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 469:Action : Reduce rule [assignment_statement -> ID ASSIGN expression SEMICOLON] with ['x','=','"string"',';'] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1045a0400> (('assignment', 'x', '"string"'))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list assignment_statement . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 469:Action : Reduce rule [statement -> assignment_statement] with [<tuple @ 0x1045a0400>] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x1045a0400> (('assignment', 'x', '"string"'))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045aab80>,<tuple @ 0x1045a0400>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045aabc0> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 445:Action : Shift and goto state 17
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN . LexToken(LPAREN,'(',6,78)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN . LexToken(ID,'x',6,79)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN ID . LexToken(RPAREN,')',6,80)
   yacc.py: 469:Action : Reduce rule [expression -> ID] with ['x'] and goto state 76
   yacc.py: 506:Result : <str @ 0x105766220> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN expression . LexToken(RPAREN,')',6,80)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN expression RPAREN . LexToken(SEMICOLON,';',6,81)
   yacc.py: 445:Action : Shift and goto state 99
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN expression RPAREN SEMICOLON . LexToken(RBRACE,'}',7,83)
   yacc.py: 469:Action : Reduce rule [print_statement -> WRITELN LPAREN expression RPAREN SEMICOLON] with ['writeln','(','x',')',';'] and goto state 11
   yacc.py: 506:Result : <tuple @ 0x104594ac0> (('print', 'x'))
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list print_statement . LexToken(RBRACE,'}',7,83)
   yacc.py: 469:Action : Reduce rule [statement -> print_statement] with [('print', 'x')] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x104594ac0> (('print', 'x'))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(RBRACE,'}',7,83)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045aabc0>,('print', 'x')] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045aab80> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(RBRACE,'}',7,83)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 430:Defaulted state 32: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list RBRACE . None
   yacc.py: 469:Action : Reduce rule [program -> PROGRAM ID LBRACE statement_list RBRACE] with ['program','main','{',<list @ 0x1045aab80>,'}'] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x1045a0640> (('program', 'main', [('declaration', 'in ...)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : program . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x1045a0640> (('program', 'main', [('declaration', 'in ...)
   yacc.py: 572:PLY: PARSE DEBUG END
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'main',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(LBRACE,'{',1,12)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID LBRACE . LexToken(INT,'int',2,18)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID LBRACE INT . LexToken(ID,'f',2,22)
   yacc.py: 469:Action : Reduce rule [type -> INT] with ['int'] and goto state 16
   yacc.py: 506:Result : <str @ 0x1045ba830> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type . LexToken(ID,'f',2,22)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type ID . LexToken(COMA,',',2,23)
   yacc.py: 469:Action : Reduce rule [declaration_item -> ID] with ['f'] and goto state 48
   yacc.py: 506:Result : <tuple @ 0x1045a2b40> (('f', None))
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_item . LexToken(COMA,',',2,23)
   yacc.py: 469:Action : Reduce rule [declaration_list -> declaration_item] with [('f', None)] and goto state 47
   yacc.py: 506:Result : <list @ 0x1045ba600> ([('f', None)])
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list . LexToken(COMA,',',2,23)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list COMA . LexToken(ID,'x',2,24)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list COMA ID . LexToken(SEMICOLON,';',2,25)
   yacc.py: 469:Action : Reduce rule [declaration_item -> ID] with ['x'] and goto state 85
   yacc.py: 506:Result : <tuple @ 0x104558080> (('x', None))
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list COMA declaration_item . LexToken(SEMICOLON,';',2,25)
   yacc.py: 469:Action : Reduce rule [declaration_list -> declaration_list COMA declaration_item] with [[('f', None)],',',('x', None)] and goto state 47
   yacc.py: 506:Result : <list @ 0x1045ba5c0> ([('f', None), ('x', None)])
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list . LexToken(SEMICOLON,';',2,25)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID LBRACE type declaration_list SEMICOLON . LexToken(ID,'f',3,31)
   yacc.py: 469:Action : Reduce rule [declaration_statement -> type declaration_list SEMICOLON] with ['int',<list @ 0x1045ba5c0>,';'] and goto state 9
   yacc.py: 506:Result : <tuple @ 0x1045abd00> (('declaration', 'int', [('f', None), ('x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID LBRACE declaration_statement . LexToken(ID,'f',3,31)
   yacc.py: 469:Action : Reduce rule [statement -> declaration_statement] with [<tuple @ 0x1045abd00>] and goto state 7
   yacc.py: 506:Result : <tuple @ 0x1045abd00> (('declaration', 'int', [('f', None), ('x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement . LexToken(ID,'f',3,31)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement] with [<tuple @ 0x1045abd00>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045ba680> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(ID,'f',3,31)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID . LexToken(ASSIGN,'=',3,33)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN . LexToken(VAR_INT,1,3,35)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN VAR_INT . LexToken(SEMICOLON,';',3,36)
   yacc.py: 469:Action : Reduce rule [expression -> VAR_INT] with [1] and goto state 60
   yacc.py: 506:Result : <int @ 0x10575a940> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression . LexToken(SEMICOLON,';',3,36)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression SEMICOLON . LexToken(ID,'x',4,42)
   yacc.py: 469:Action : Reduce rule [assignment_statement -> ID ASSIGN expression SEMICOLON] with ['f','=',1,';'] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1045abcc0> (('assignment', 'f', 1))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list assignment_statement . LexToken(ID,'x',4,42)
   yacc.py: 469:Action : Reduce rule [statement -> assignment_statement] with [<tuple @ 0x1045abcc0>] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x1045abcc0> (('assignment', 'f', 1))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(ID,'x',4,42)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045ba680>,<tuple @ 0x1045abcc0>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045ba580> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(ID,'x',4,42)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID . LexToken(ASSIGN,'=',4,44)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN . LexToken(VAR_INT,5,4,46)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN VAR_INT . LexToken(SEMICOLON,';',4,47)
   yacc.py: 469:Action : Reduce rule [expression -> VAR_INT] with [5] and goto state 60
   yacc.py: 506:Result : <int @ 0x10575a9c0> (5)
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression . LexToken(SEMICOLON,';',4,47)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression SEMICOLON . LexToken(ID,'x',5,53)
   yacc.py: 469:Action : Reduce rule [assignment_statement -> ID ASSIGN expression SEMICOLON] with ['x','=',5,';'] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1045bab00> (('assignment', 'x', 5))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list assignment_statement . LexToken(ID,'x',5,53)
   yacc.py: 469:Action : Reduce rule [statement -> assignment_statement] with [<tuple @ 0x1045bab00>] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x1045bab00> (('assignment', 'x', 5))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(ID,'x',5,53)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045ba580>,<tuple @ 0x1045bab00>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045ba600> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(ID,'x',5,53)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID . LexToken(ASSIGN,'=',5,55)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN . LexToken(STRING,'"string"',5,57)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN STRING . LexToken(SEMICOLON,';',5,65)
   yacc.py: 469:Action : Reduce rule [expression -> STRING] with ['"string"'] and goto state 60
   yacc.py: 506:Result : <str @ 0x1045ba970> ('"string"')
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression . LexToken(SEMICOLON,';',5,65)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list ID ASSIGN expression SEMICOLON . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 469:Action : Reduce rule [assignment_statement -> ID ASSIGN expression SEMICOLON] with ['x','=','"string"',';'] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1045bac40> (('assignment', 'x', '"string"'))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list assignment_statement . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 469:Action : Reduce rule [statement -> assignment_statement] with [<tuple @ 0x1045bac40>] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x1045bac40> (('assignment', 'x', '"string"'))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045ba600>,<tuple @ 0x1045bac40>] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045ba680> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(WRITELN,'writeln',6,71)
   yacc.py: 445:Action : Shift and goto state 17
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN . LexToken(LPAREN,'(',6,78)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN . LexToken(ID,'x',6,79)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN ID . LexToken(RPAREN,')',6,80)
   yacc.py: 469:Action : Reduce rule [expression -> ID] with ['x'] and goto state 76
   yacc.py: 506:Result : <str @ 0x105766220> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN expression . LexToken(RPAREN,')',6,80)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN expression RPAREN . LexToken(SEMICOLON,';',6,81)
   yacc.py: 445:Action : Shift and goto state 99
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list WRITELN LPAREN expression RPAREN SEMICOLON . LexToken(RBRACE,'}',7,83)
   yacc.py: 469:Action : Reduce rule [print_statement -> WRITELN LPAREN expression RPAREN SEMICOLON] with ['writeln','(','x',')',';'] and goto state 11
   yacc.py: 506:Result : <tuple @ 0x104582000> (('print', 'x'))
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list print_statement . LexToken(RBRACE,'}',7,83)
   yacc.py: 469:Action : Reduce rule [statement -> print_statement] with [('print', 'x')] and goto state 33
   yacc.py: 506:Result : <tuple @ 0x104582000> (('print', 'x'))
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list statement . LexToken(RBRACE,'}',7,83)
   yacc.py: 469:Action : Reduce rule [statement_list -> statement_list statement] with [<list @ 0x1045ba680>,('print', 'x')] and goto state 6
   yacc.py: 506:Result : <list @ 0x1045ba600> ([('declaration', 'int', [('f', None), (' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list . LexToken(RBRACE,'}',7,83)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 430:Defaulted state 32: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID LBRACE statement_list RBRACE . None
   yacc.py: 469:Action : Reduce rule [program -> PROGRAM ID LBRACE statement_list RBRACE] with ['program','main','{',<list @ 0x1045ba600>,'}'] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x1045bad00> (('program', 'main', [('declaration', 'in ...)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : program . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x1045bad00> (('program', 'main', [('declaration', 'in ...)
   yacc.py: 572:PLY: PARSE DEBUG END
