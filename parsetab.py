
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COMA DIVIDE ELSE EQ FLOAT FOR GT GTE ID IF INT LBRACE LPAREN LT LTE MINUS MINUSMINUS NE PLUS PLUSPLUS PROGRAM RBRACE RPAREN SEMICOLON STRING TIMES VAR_FLOAT VAR_INT WHILE WRITE WRITELNprogram : PROGRAM ID LBRACE statement_list RBRACE\n        statement_list : statement\n                       | statement_list statement\n        \n        statement : expression_statement \n                  | declaration_statement\n                  | assignment_statement\n                  | print_statement\n                  | if_statement\n                  | while_statement\n                  | for_statement\n        \n        declaration_statement : type ID SEMICOLON\n                            | type ID ASSIGN expression SEMICOLON\n        \n        id_list : ID\n                | id_list COMA ID\n        assignment_statement : ID ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLON\n        print_statement : WRITELN LPAREN expression RPAREN SEMICOLON \n                        | WRITE LPAREN expression RPAREN SEMICOLON\n        \n        if_statement : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n                     | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n        while_statement : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfor_statement : FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE\n        expression : expression PLUSPLUS\n                | expression MINUSMINUS\n                | PLUSPLUS expression\n                | MINUSMINUS expression\n                | expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | expression LT expression\n                | expression GT expression\n                | expression LTE expression\n                | expression GTE expression\n                | expression EQ expression\n                | expression NE expression\n                | VAR_INT\n                | VAR_FLOAT\n                | STRING\n                | ID\n        \n        type : INT\n             | FLOAT\n             | BOOL\n             | STRING\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,4,6,7,8,9,10,11,12,13,14,16,22,23,26,27,28,29,30,32,33,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,67,68,73,75,82,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[3,5,5,-2,-4,-5,-6,-7,-8,-9,-10,46,54,54,-44,-41,-42,-43,54,-3,-16,54,54,54,54,54,54,54,54,54,54,54,54,54,54,74,-11,54,54,-15,-12,-17,-18,5,5,54,5,5,-19,-21,5,5,5,5,-22,-20,]),'LBRACE':([3,79,80,93,94,],[4,85,86,95,96,]),'WRITELN':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,17,17,17,17,-19,-21,17,17,17,17,-22,-20,]),'WRITE':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,18,18,18,18,-19,-21,18,18,18,18,-22,-20,]),'IF':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,19,19,19,19,-19,-21,19,19,19,19,-22,-20,]),'WHILE':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,20,20,20,20,-19,-21,20,20,20,20,-22,-20,]),'FOR':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,21,21,21,21,-19,-21,21,21,21,21,-22,-20,]),'PLUSPLUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,81,82,83,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,],[22,-40,22,-2,-4,-5,-6,-7,-8,-9,-10,34,22,22,-37,-38,-39,22,-3,-16,-23,-24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,34,-39,-40,34,34,34,34,34,34,34,34,34,34,34,34,-11,22,34,34,34,34,22,-15,34,34,-12,-17,-18,22,22,22,22,22,34,-19,-21,22,22,22,22,-22,-20,]),'MINUSMINUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,81,82,83,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,],[23,-40,23,-2,-4,-5,-6,-7,-8,-9,-10,35,23,23,-37,-38,-39,23,-3,-16,-23,-24,23,23,23,23,23,23,23,23,23,23,23,23,23,23,35,-39,-40,35,35,35,35,35,35,35,35,35,35,35,35,-11,23,35,35,35,35,23,-15,35,35,-12,-17,-18,23,23,23,23,23,35,-19,-21,23,23,23,23,-22,-20,]),'VAR_INT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,47,48,49,50,67,68,73,75,82,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,24,24,24,-3,-16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-11,24,24,-15,-12,-17,-18,24,24,24,24,24,-19,-21,24,24,24,24,-22,-20,]),'VAR_FLOAT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,47,48,49,50,67,68,73,75,82,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,25,25,25,-3,-16,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-11,25,25,-15,-12,-17,-18,25,25,25,25,25,-19,-21,25,25,25,25,-22,-20,]),'STRING':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,47,48,49,50,67,68,73,75,82,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,53,53,53,-3,-16,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-11,53,53,-15,-12,-17,-18,26,26,53,26,26,-19,-21,26,26,26,26,-22,-20,]),'INT':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[27,27,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,27,27,27,27,-19,-21,27,27,27,27,-22,-20,]),'FLOAT':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,28,28,28,28,-19,-21,28,28,28,28,-22,-20,]),'BOOL':([4,6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,29,29,29,29,-19,-21,29,29,29,29,-22,-20,]),'ASSIGN':([5,46,74,],[30,68,30,]),'SEMICOLON':([5,15,24,25,26,34,35,46,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,76,77,78,81,],[-40,33,-37,-38,-39,-23,-24,67,-25,-39,-40,-26,75,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,82,83,84,87,]),'PLUS':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,36,-37,-38,-39,-23,-24,36,-39,-40,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MINUS':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,37,-37,-38,-39,-23,-24,37,-39,-40,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TIMES':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,38,-37,-38,-39,-23,-24,38,-39,-40,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DIVIDE':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,39,-37,-38,-39,-23,-24,39,-39,-40,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LT':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,40,-37,-38,-39,-23,-24,40,-39,-40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'GT':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,41,-37,-38,-39,-23,-24,41,-39,-40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'LTE':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,42,-37,-38,-39,-23,-24,42,-39,-40,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'GTE':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,43,-37,-38,-39,-23,-24,43,-39,-40,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'EQ':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,44,-37,-38,-39,-23,-24,44,-39,-40,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NE':([5,15,24,25,26,34,35,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,90,],[-40,45,-37,-38,-39,-23,-24,45,-39,-40,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RBRACE':([6,7,8,9,10,11,12,13,14,32,33,67,75,82,83,84,88,89,91,92,97,98,99,100,],[31,-2,-4,-5,-6,-7,-8,-9,-10,-3,-16,-11,-15,-12,-17,-18,91,92,-19,-21,99,100,-22,-20,]),'LPAREN':([17,18,19,20,21,],[47,48,49,50,51,]),'RPAREN':([24,25,34,35,52,53,54,55,57,58,59,60,61,62,63,64,65,66,69,70,71,72,90,],[-37,-38,-23,-24,-25,-39,-40,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,77,78,79,80,93,]),'ELSE':([91,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([4,85,86,95,96,],[6,88,89,97,98,]),'statement':([4,6,85,86,88,89,95,96,97,98,],[7,32,7,7,32,32,7,7,32,32,]),'expression_statement':([4,6,85,86,88,89,95,96,97,98,],[8,8,8,8,8,8,8,8,8,8,]),'declaration_statement':([4,6,85,86,88,89,95,96,97,98,],[9,9,9,9,9,9,9,9,9,9,]),'assignment_statement':([4,6,51,85,86,88,89,95,96,97,98,],[10,10,73,10,10,10,10,10,10,10,10,]),'print_statement':([4,6,85,86,88,89,95,96,97,98,],[11,11,11,11,11,11,11,11,11,11,]),'if_statement':([4,6,85,86,88,89,95,96,97,98,],[12,12,12,12,12,12,12,12,12,12,]),'while_statement':([4,6,85,86,88,89,95,96,97,98,],[13,13,13,13,13,13,13,13,13,13,]),'for_statement':([4,6,85,86,88,89,95,96,97,98,],[14,14,14,14,14,14,14,14,14,14,]),'expression':([4,6,22,23,30,36,37,38,39,40,41,42,43,44,45,47,48,49,50,68,73,85,86,87,88,89,95,96,97,98,],[15,15,52,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,76,81,15,15,90,15,15,15,15,15,15,]),'type':([4,6,85,86,88,89,95,96,97,98,],[16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LBRACE statement_list RBRACE','program',5,'p_program','parser_.py',29),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_.py',35),
  ('statement -> expression_statement','statement',1,'p_statement','parser_.py',44),
  ('statement -> declaration_statement','statement',1,'p_statement','parser_.py',45),
  ('statement -> assignment_statement','statement',1,'p_statement','parser_.py',46),
  ('statement -> print_statement','statement',1,'p_statement','parser_.py',47),
  ('statement -> if_statement','statement',1,'p_statement','parser_.py',48),
  ('statement -> while_statement','statement',1,'p_statement','parser_.py',49),
  ('statement -> for_statement','statement',1,'p_statement','parser_.py',50),
  ('declaration_statement -> type ID SEMICOLON','declaration_statement',3,'p_declaration_statement','parser_.py',56),
  ('declaration_statement -> type ID ASSIGN expression SEMICOLON','declaration_statement',5,'p_declaration_statement','parser_.py',57),
  ('id_list -> ID','id_list',1,'p_id_list','parser_.py',66),
  ('id_list -> id_list COMA ID','id_list',3,'p_id_list','parser_.py',67),
  ('assignment_statement -> ID ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser_.py',75),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser_.py',79),
  ('print_statement -> WRITELN LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',84),
  ('print_statement -> WRITE LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',85),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parser_.py',91),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parser_.py',92),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parser_.py',100),
  ('for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE','for_statement',10,'p_for_statement','parser_.py',104),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression','parser_.py',109),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression','parser_.py',110),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression','parser_.py',111),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression','parser_.py',112),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser_.py',113),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser_.py',114),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser_.py',115),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser_.py',116),
  ('expression -> expression LT expression','expression',3,'p_expression','parser_.py',117),
  ('expression -> expression GT expression','expression',3,'p_expression','parser_.py',118),
  ('expression -> expression LTE expression','expression',3,'p_expression','parser_.py',119),
  ('expression -> expression GTE expression','expression',3,'p_expression','parser_.py',120),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser_.py',121),
  ('expression -> expression NE expression','expression',3,'p_expression','parser_.py',122),
  ('expression -> VAR_INT','expression',1,'p_expression','parser_.py',123),
  ('expression -> VAR_FLOAT','expression',1,'p_expression','parser_.py',124),
  ('expression -> STRING','expression',1,'p_expression','parser_.py',125),
  ('expression -> ID','expression',1,'p_expression','parser_.py',126),
  ('type -> INT','type',1,'p_type','parser_.py',140),
  ('type -> FLOAT','type',1,'p_type','parser_.py',141),
  ('type -> BOOL','type',1,'p_type','parser_.py',142),
  ('type -> STRING','type',1,'p_type','parser_.py',143),
]
