
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COMA DIVIDE ELSE EQ FLOAT FOR GT GTE ID IF INT LBRACE LBRACE_INIT LBRACKET LPAREN LT LTE MINUS MINUSMINUS NE PLUS PLUSPLUS PROGRAM RBRACE RBRACE_INIT RBRACKET RPAREN SEMICOLON STRING TIMES VAR_FLOAT VAR_INT WHILE WRITE WRITELNprogram : PROGRAM ID LBRACE statement_list RBRACE\n        statement_list : statement\n                       | statement_list statement\n        \n        statement : expression_statement \n                  | declaration_statement\n                  | assignment_statement\n                  | print_statement\n                  | if_statement\n                  | while_statement\n                  | for_statement\n        \n        declaration_statement : type declaration_list SEMICOLON\n        \n        declaration_list : declaration_item\n                        | declaration_list COMA declaration_item\n        \n        declaration_item : ID\n                        | ID ASSIGN expression\n                        | ID LBRACKET expression RBRACKET ASSIGN expression\n                        | ID LBRACKET expression RBRACKET\n                        | ID LBRACKET RBRACKET ASSIGN LBRACE expression_list RBRACE\n        \n        expression_list : expression\n                        | expression_list COMA expression\n        assignment_statement : ID ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLON\n        print_statement : WRITELN LPAREN expression RPAREN SEMICOLON \n                        | WRITE LPAREN expression RPAREN SEMICOLON\n        \n        if_statement : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n                     | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n        while_statement : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfor_statement : FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE\n        expression : expression PLUSPLUS\n                | expression MINUSMINUS\n                | PLUSPLUS expression\n                | MINUSMINUS expression\n                | expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | expression LT expression\n                | expression GT expression\n                | expression LTE expression\n                | expression GTE expression\n                | expression EQ expression\n                | expression NE expression\n                | VAR_INT\n                | VAR_FLOAT\n                | STRING\n                | ID\n        \n        type : INT\n             | FLOAT\n             | BOOL\n             | STRING\n             | INT LBRACKET RBRACKET\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,4,6,7,8,9,10,11,12,13,14,16,22,23,26,27,28,29,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,70,71,72,73,78,80,81,93,94,95,96,97,98,99,100,101,106,107,110,112,114,115,116,117,118,],[3,5,5,-2,-4,-5,-6,-7,-8,-9,-10,48,56,56,-50,-47,-48,-49,56,-3,-22,56,56,56,56,56,56,56,56,56,56,56,56,56,56,79,-11,48,56,56,56,-51,-21,-23,-24,5,5,56,56,56,5,5,-25,-27,56,5,5,5,5,-28,-26,]),'LBRACE':([3,88,89,92,108,111,],[4,95,96,99,112,114,]),'WRITELN':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,17,17,17,17,-25,-27,17,17,17,17,-28,-26,]),'WRITE':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,18,18,18,18,-25,-27,18,18,18,18,-28,-26,]),'IF':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,19,19,19,19,-25,-27,19,19,19,19,-28,-26,]),'WHILE':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,20,20,20,20,-25,-27,20,20,20,20,-28,-26,]),'FOR':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,21,21,21,21,-25,-27,21,21,21,21,-28,-26,]),'PLUSPLUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,81,83,84,90,93,94,95,96,97,98,99,100,101,102,103,105,106,107,110,112,113,114,115,116,117,118,],[22,-46,22,-2,-4,-5,-6,-7,-8,-9,-10,34,22,22,-43,-44,-45,22,-3,-22,-29,-30,22,22,22,22,22,22,22,22,22,22,22,22,22,22,34,-45,-46,34,34,34,34,34,34,34,34,34,34,34,34,-11,22,22,34,34,34,34,22,-21,34,34,34,-23,-24,22,22,22,22,22,22,22,34,34,34,-25,-27,22,22,34,22,22,22,-28,-26,]),'MINUSMINUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,81,83,84,90,93,94,95,96,97,98,99,100,101,102,103,105,106,107,110,112,113,114,115,116,117,118,],[23,-46,23,-2,-4,-5,-6,-7,-8,-9,-10,35,23,23,-43,-44,-45,23,-3,-22,-29,-30,23,23,23,23,23,23,23,23,23,23,23,23,23,23,35,-45,-46,35,35,35,35,35,35,35,35,35,35,35,35,-11,23,23,35,35,35,35,23,-21,35,35,35,-23,-24,23,23,23,23,23,23,23,35,35,35,-25,-27,23,23,35,23,23,23,-28,-26,]),'VAR_INT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,70,72,73,78,81,93,94,95,96,97,98,99,100,101,106,107,110,112,114,115,116,117,118,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,24,24,24,-3,-22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-11,24,24,24,-21,-23,-24,24,24,24,24,24,24,24,-25,-27,24,24,24,24,24,-28,-26,]),'VAR_FLOAT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,70,72,73,78,81,93,94,95,96,97,98,99,100,101,106,107,110,112,114,115,116,117,118,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,25,25,25,-3,-22,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-11,25,25,25,-21,-23,-24,25,25,25,25,25,25,25,-25,-27,25,25,25,25,25,-28,-26,]),'STRING':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,70,72,73,78,81,93,94,95,96,97,98,99,100,101,106,107,110,112,114,115,116,117,118,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,55,55,55,-3,-22,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-11,55,55,55,-21,-23,-24,26,26,55,55,55,26,26,-25,-27,55,26,26,26,26,-28,-26,]),'INT':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[27,27,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,27,27,27,27,-25,-27,27,27,27,27,-28,-26,]),'FLOAT':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,28,28,28,28,-25,-27,28,28,28,28,-28,-26,]),'BOOL':([4,6,7,8,9,10,11,12,13,14,32,33,70,81,93,94,95,96,100,101,106,107,112,114,115,116,117,118,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-3,-22,-11,-21,-23,-24,29,29,29,29,-25,-27,29,29,29,29,-28,-26,]),'ASSIGN':([5,48,79,85,91,],[30,72,30,92,98,]),'SEMICOLON':([5,15,24,25,26,34,35,46,47,48,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,82,83,86,87,90,91,103,109,],[-46,33,-43,-44,-45,-29,-30,70,-12,-14,-31,-45,-46,-32,81,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-13,-15,93,94,97,-17,-16,-18,]),'PLUS':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,36,-43,-44,-45,-29,-30,36,-45,-46,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MINUS':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,37,-43,-44,-45,-29,-30,37,-45,-46,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TIMES':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,38,-43,-44,-45,-29,-30,38,-45,-46,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DIVIDE':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,39,-43,-44,-45,-29,-30,39,-45,-46,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LT':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,40,-43,-44,-45,-29,-30,40,-45,-46,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'GT':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,41,-43,-44,-45,-29,-30,41,-45,-46,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'LTE':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,42,-43,-44,-45,-29,-30,42,-45,-46,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'GTE':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,43,-43,-44,-45,-29,-30,43,-45,-46,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'EQ':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,44,-43,-44,-45,-29,-30,44,-45,-46,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NE':([5,15,24,25,26,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,102,103,105,113,],[-46,45,-43,-44,-45,-29,-30,45,-45,-46,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RBRACE':([6,7,8,9,10,11,12,13,14,24,25,32,33,34,35,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,81,93,94,100,101,104,105,106,107,113,115,116,117,118,],[31,-2,-4,-5,-6,-7,-8,-9,-10,-43,-44,-3,-22,-29,-30,-31,-45,-46,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-11,-21,-23,-24,106,107,109,-19,-25,-27,-20,117,118,-28,-26,]),'LPAREN':([17,18,19,20,21,],[49,50,51,52,53,]),'RPAREN':([24,25,34,35,54,55,56,57,60,61,62,63,64,65,66,67,68,69,74,75,76,77,102,],[-43,-44,-29,-30,-31,-45,-46,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,86,87,88,89,108,]),'COMA':([24,25,34,35,46,47,48,54,55,56,57,60,61,62,63,64,65,66,67,68,69,82,83,91,103,104,105,109,113,],[-43,-44,-29,-30,71,-12,-14,-31,-45,-46,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-13,-15,-17,-16,110,-19,-18,-20,]),'RBRACKET':([24,25,34,35,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,73,84,],[-43,-44,-29,-30,-31,-45,-46,-32,80,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,85,91,]),'LBRACKET':([27,48,],[58,73,]),'ELSE':([106,],[111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([4,95,96,112,114,],[6,100,101,115,116,]),'statement':([4,6,95,96,100,101,112,114,115,116,],[7,32,7,7,32,32,7,7,32,32,]),'expression_statement':([4,6,95,96,100,101,112,114,115,116,],[8,8,8,8,8,8,8,8,8,8,]),'declaration_statement':([4,6,95,96,100,101,112,114,115,116,],[9,9,9,9,9,9,9,9,9,9,]),'assignment_statement':([4,6,53,95,96,100,101,112,114,115,116,],[10,10,78,10,10,10,10,10,10,10,10,]),'print_statement':([4,6,95,96,100,101,112,114,115,116,],[11,11,11,11,11,11,11,11,11,11,]),'if_statement':([4,6,95,96,100,101,112,114,115,116,],[12,12,12,12,12,12,12,12,12,12,]),'while_statement':([4,6,95,96,100,101,112,114,115,116,],[13,13,13,13,13,13,13,13,13,13,]),'for_statement':([4,6,95,96,100,101,112,114,115,116,],[14,14,14,14,14,14,14,14,14,14,]),'expression':([4,6,22,23,30,36,37,38,39,40,41,42,43,44,45,49,50,51,52,72,73,78,95,96,97,98,99,100,101,110,112,114,115,116,],[15,15,54,57,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,83,84,90,15,15,102,103,105,15,15,113,15,15,15,15,]),'type':([4,6,95,96,100,101,112,114,115,116,],[16,16,16,16,16,16,16,16,16,16,]),'declaration_list':([16,],[46,]),'declaration_item':([16,71,],[47,82,]),'expression_list':([99,],[104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LBRACE statement_list RBRACE','program',5,'p_program','parser_.py',28),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_.py',33),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_.py',34),
  ('statement -> expression_statement','statement',1,'p_statement','parser_.py',43),
  ('statement -> declaration_statement','statement',1,'p_statement','parser_.py',44),
  ('statement -> assignment_statement','statement',1,'p_statement','parser_.py',45),
  ('statement -> print_statement','statement',1,'p_statement','parser_.py',46),
  ('statement -> if_statement','statement',1,'p_statement','parser_.py',47),
  ('statement -> while_statement','statement',1,'p_statement','parser_.py',48),
  ('statement -> for_statement','statement',1,'p_statement','parser_.py',49),
  ('declaration_statement -> type declaration_list SEMICOLON','declaration_statement',3,'p_declaration_statement','parser_.py',55),
  ('declaration_list -> declaration_item','declaration_list',1,'p_declaration_list','parser_.py',61),
  ('declaration_list -> declaration_list COMA declaration_item','declaration_list',3,'p_declaration_list','parser_.py',62),
  ('declaration_item -> ID','declaration_item',1,'p_declaration_item','parser_.py',71),
  ('declaration_item -> ID ASSIGN expression','declaration_item',3,'p_declaration_item','parser_.py',72),
  ('declaration_item -> ID LBRACKET expression RBRACKET ASSIGN expression','declaration_item',6,'p_declaration_item','parser_.py',73),
  ('declaration_item -> ID LBRACKET expression RBRACKET','declaration_item',4,'p_declaration_item','parser_.py',74),
  ('declaration_item -> ID LBRACKET RBRACKET ASSIGN LBRACE expression_list RBRACE','declaration_item',7,'p_declaration_item','parser_.py',75),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser_.py',88),
  ('expression_list -> expression_list COMA expression','expression_list',3,'p_expression_list','parser_.py',89),
  ('assignment_statement -> ID ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser_.py',97),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser_.py',101),
  ('print_statement -> WRITELN LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',107),
  ('print_statement -> WRITE LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',108),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parser_.py',114),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parser_.py',115),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parser_.py',123),
  ('for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE','for_statement',10,'p_for_statement','parser_.py',127),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression','parser_.py',132),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression','parser_.py',133),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression','parser_.py',134),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression','parser_.py',135),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser_.py',136),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser_.py',137),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser_.py',138),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser_.py',139),
  ('expression -> expression LT expression','expression',3,'p_expression','parser_.py',140),
  ('expression -> expression GT expression','expression',3,'p_expression','parser_.py',141),
  ('expression -> expression LTE expression','expression',3,'p_expression','parser_.py',142),
  ('expression -> expression GTE expression','expression',3,'p_expression','parser_.py',143),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser_.py',144),
  ('expression -> expression NE expression','expression',3,'p_expression','parser_.py',145),
  ('expression -> VAR_INT','expression',1,'p_expression','parser_.py',146),
  ('expression -> VAR_FLOAT','expression',1,'p_expression','parser_.py',147),
  ('expression -> STRING','expression',1,'p_expression','parser_.py',148),
  ('expression -> ID','expression',1,'p_expression','parser_.py',149),
  ('type -> INT','type',1,'p_type','parser_.py',163),
  ('type -> FLOAT','type',1,'p_type','parser_.py',164),
  ('type -> BOOL','type',1,'p_type','parser_.py',165),
  ('type -> STRING','type',1,'p_type','parser_.py',166),
  ('type -> INT LBRACKET RBRACKET','type',3,'p_type','parser_.py',167),
]
