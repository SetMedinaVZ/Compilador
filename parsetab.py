
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COMA DIVIDE ELSE EQ FLOAT FOR GT GTE ID IF INT LBRACE LPAREN LT LTE MINUS MINUSMINUS NE PLUS PLUSPLUS PROGRAM RBRACE RPAREN SEMICOLON STRING TIMES VAR_FLOAT VAR_INT WHILE WRITE WRITELNprogram : PROGRAM ID LBRACE statement_list RBRACE\n        statement_list : statement\n                       | statement_list statement\n        \n        statement : expression_statement \n                  | declaration_statement\n                  | assignment_statement\n                  | print_statement\n                  | if_statement\n                  | while_statement\n                  | for_statement\n        declaration_statement : type id_list SEMICOLON\n        id_list : ID\n                | id_list COMA ID\n        assignment_statement : ID ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLON\n        print_statement : WRITELN LPAREN expression RPAREN SEMICOLON \n                        | WRITE LPAREN expression RPAREN SEMICOLON\n        \n        if_statement : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n                     | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n        while_statement : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfor_statement : FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE\n        expression : expression PLUSPLUS\n                | expression MINUSMINUS\n                | PLUSPLUS expression\n                | MINUSMINUS expression\n                | expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | expression LT expression\n                | expression GT expression\n                | expression LTE expression\n                | expression GTE expression\n                | expression EQ expression\n                | expression NE expression\n                | VAR_INT\n                | VAR_FLOAT\n                | STRING\n                | ID\n        \n        type : INT\n             | FLOAT\n             | BOOL\n             | STRING\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,4,6,7,8,9,10,11,12,13,14,16,22,23,26,27,28,29,30,32,33,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,68,69,74,76,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[3,5,5,-2,-4,-5,-6,-7,-8,-9,-10,47,55,55,-43,-40,-41,-42,55,-3,-15,55,55,55,55,55,55,55,55,55,55,55,55,55,55,75,-11,77,55,-14,-16,-17,5,5,55,5,5,-18,-20,5,5,5,5,-21,-19,]),'LBRACE':([3,80,81,93,94,],[4,85,86,95,96,]),'WRITELN':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,17,17,17,17,-18,-20,17,17,17,17,-21,-19,]),'WRITE':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,18,18,18,18,-18,-20,18,18,18,18,-21,-19,]),'IF':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,19,19,19,19,-18,-20,19,19,19,19,-21,-19,]),'WHILE':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,20,20,20,20,-18,-20,20,20,20,20,-21,-19,]),'FOR':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,21,21,21,21,-18,-20,21,21,21,21,-21,-19,]),'PLUSPLUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,76,82,83,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,],[22,-39,22,-2,-4,-5,-6,-7,-8,-9,-10,34,22,22,-36,-37,-38,22,-3,-15,-22,-23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,34,-38,-39,34,34,34,34,34,34,34,34,34,34,34,34,-11,34,34,34,34,22,-14,34,-16,-17,22,22,22,22,22,34,-18,-20,22,22,22,22,-21,-19,]),'MINUSMINUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,76,82,83,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,],[23,-39,23,-2,-4,-5,-6,-7,-8,-9,-10,35,23,23,-36,-37,-38,23,-3,-15,-22,-23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,35,-38,-39,35,35,35,35,35,35,35,35,35,35,35,35,-11,35,35,35,35,23,-14,35,-16,-17,23,23,23,23,23,35,-18,-20,23,23,23,23,-21,-19,]),'VAR_INT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,48,49,50,51,68,74,76,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,24,24,24,-3,-15,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-11,24,-14,-16,-17,24,24,24,24,24,-18,-20,24,24,24,24,-21,-19,]),'VAR_FLOAT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,48,49,50,51,68,74,76,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,25,25,25,-3,-15,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-11,25,-14,-16,-17,25,25,25,25,25,-18,-20,25,25,25,25,-21,-19,]),'STRING':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,48,49,50,51,68,74,76,83,84,85,86,87,88,89,91,92,95,96,97,98,99,100,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,54,54,54,-3,-15,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-11,54,-14,-16,-17,26,26,54,26,26,-18,-20,26,26,26,26,-21,-19,]),'INT':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[27,27,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,27,27,27,27,-18,-20,27,27,27,27,-21,-19,]),'FLOAT':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,28,28,28,28,-18,-20,28,28,28,28,-21,-19,]),'BOOL':([4,6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,85,86,88,89,91,92,95,96,97,98,99,100,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,29,29,29,29,-18,-20,29,29,29,29,-21,-19,]),'ASSIGN':([5,75,],[30,30,]),'SEMICOLON':([5,15,24,25,26,34,35,46,47,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,77,78,79,82,],[-39,33,-36,-37,-38,-22,-23,68,-12,-24,-38,-39,-25,76,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-13,83,84,87,]),'PLUS':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,36,-36,-37,-38,-22,-23,36,-38,-39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MINUS':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,37,-36,-37,-38,-22,-23,37,-38,-39,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TIMES':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,38,-36,-37,-38,-22,-23,38,-38,-39,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DIVIDE':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,39,-36,-37,-38,-22,-23,39,-38,-39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LT':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,40,-36,-37,-38,-22,-23,40,-38,-39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'GT':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,41,-36,-37,-38,-22,-23,41,-38,-39,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'LTE':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,42,-36,-37,-38,-22,-23,42,-38,-39,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'GTE':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,43,-36,-37,-38,-22,-23,43,-38,-39,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'EQ':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,44,-36,-37,-38,-22,-23,44,-38,-39,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NE':([5,15,24,25,26,34,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,90,],[-39,45,-36,-37,-38,-22,-23,45,-38,-39,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RBRACE':([6,7,8,9,10,11,12,13,14,32,33,68,76,83,84,88,89,91,92,97,98,99,100,],[31,-2,-4,-5,-6,-7,-8,-9,-10,-3,-15,-11,-14,-16,-17,91,92,-18,-20,99,100,-21,-19,]),'LPAREN':([17,18,19,20,21,],[48,49,50,51,52,]),'RPAREN':([24,25,34,35,53,54,55,56,58,59,60,61,62,63,64,65,66,67,70,71,72,73,90,],[-36,-37,-22,-23,-24,-38,-39,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,78,79,80,81,93,]),'COMA':([46,47,77,],[69,-12,-13,]),'ELSE':([91,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([4,85,86,95,96,],[6,88,89,97,98,]),'statement':([4,6,85,86,88,89,95,96,97,98,],[7,32,7,7,32,32,7,7,32,32,]),'expression_statement':([4,6,85,86,88,89,95,96,97,98,],[8,8,8,8,8,8,8,8,8,8,]),'declaration_statement':([4,6,85,86,88,89,95,96,97,98,],[9,9,9,9,9,9,9,9,9,9,]),'assignment_statement':([4,6,52,85,86,88,89,95,96,97,98,],[10,10,74,10,10,10,10,10,10,10,10,]),'print_statement':([4,6,85,86,88,89,95,96,97,98,],[11,11,11,11,11,11,11,11,11,11,]),'if_statement':([4,6,85,86,88,89,95,96,97,98,],[12,12,12,12,12,12,12,12,12,12,]),'while_statement':([4,6,85,86,88,89,95,96,97,98,],[13,13,13,13,13,13,13,13,13,13,]),'for_statement':([4,6,85,86,88,89,95,96,97,98,],[14,14,14,14,14,14,14,14,14,14,]),'expression':([4,6,22,23,30,36,37,38,39,40,41,42,43,44,45,48,49,50,51,74,85,86,87,88,89,95,96,97,98,],[15,15,53,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,82,15,15,90,15,15,15,15,15,15,]),'type':([4,6,85,86,88,89,95,96,97,98,],[16,16,16,16,16,16,16,16,16,16,]),'id_list':([16,],[46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LBRACE statement_list RBRACE','program',5,'p_program','parser_sebas.py',29),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_sebas.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_sebas.py',35),
  ('statement -> expression_statement','statement',1,'p_statement','parser_sebas.py',44),
  ('statement -> declaration_statement','statement',1,'p_statement','parser_sebas.py',45),
  ('statement -> assignment_statement','statement',1,'p_statement','parser_sebas.py',46),
  ('statement -> print_statement','statement',1,'p_statement','parser_sebas.py',47),
  ('statement -> if_statement','statement',1,'p_statement','parser_sebas.py',48),
  ('statement -> while_statement','statement',1,'p_statement','parser_sebas.py',49),
  ('statement -> for_statement','statement',1,'p_statement','parser_sebas.py',50),
  ('declaration_statement -> type id_list SEMICOLON','declaration_statement',3,'p_declaration_statement','parser_sebas.py',55),
  ('id_list -> ID','id_list',1,'p_id_list','parser_sebas.py',60),
  ('id_list -> id_list COMA ID','id_list',3,'p_id_list','parser_sebas.py',61),
  ('assignment_statement -> ID ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser_sebas.py',69),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser_sebas.py',73),
  ('print_statement -> WRITELN LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_sebas.py',78),
  ('print_statement -> WRITE LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_sebas.py',79),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parser_sebas.py',86),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parser_sebas.py',87),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parser_sebas.py',96),
  ('for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE','for_statement',10,'p_for_statement','parser_sebas.py',100),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression','parser_sebas.py',106),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression','parser_sebas.py',107),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression','parser_sebas.py',108),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression','parser_sebas.py',109),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser_sebas.py',110),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser_sebas.py',111),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser_sebas.py',112),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser_sebas.py',113),
  ('expression -> expression LT expression','expression',3,'p_expression','parser_sebas.py',114),
  ('expression -> expression GT expression','expression',3,'p_expression','parser_sebas.py',115),
  ('expression -> expression LTE expression','expression',3,'p_expression','parser_sebas.py',116),
  ('expression -> expression GTE expression','expression',3,'p_expression','parser_sebas.py',117),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser_sebas.py',118),
  ('expression -> expression NE expression','expression',3,'p_expression','parser_sebas.py',119),
  ('expression -> VAR_INT','expression',1,'p_expression','parser_sebas.py',120),
  ('expression -> VAR_FLOAT','expression',1,'p_expression','parser_sebas.py',121),
  ('expression -> STRING','expression',1,'p_expression','parser_sebas.py',122),
  ('expression -> ID','expression',1,'p_expression','parser_sebas.py',123),
  ('type -> INT','type',1,'p_type','parser_sebas.py',137),
  ('type -> FLOAT','type',1,'p_type','parser_sebas.py',138),
  ('type -> BOOL','type',1,'p_type','parser_sebas.py',139),
  ('type -> STRING','type',1,'p_type','parser_sebas.py',140),
]
