
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COMA DIVIDE ELSE EQ FLOAT FOR GT GTE ID IF INT LBRACE LBRACKET LPAREN LT LTE MINUS MINUSMINUS NE PLUS PLUSPLUS PROGRAM RBRACE RBRACKET RPAREN SEMICOLON STRING TIMES VAR_FLOAT VAR_INT WHILE WRITE WRITELNprogram : PROGRAM ID LBRACE statement_list RBRACE\n        statement_list : statement\n                       | statement_list statement\n        \n        statement : expression_statement \n                  | declaration_statement\n                  | assignment_statement\n                  | print_statement\n                  | if_statement\n                  | while_statement\n                  | for_statement\n        \n        declaration_statement : type declaration_list SEMICOLON\n        \n        declaration_list : declaration_item\n                        | declaration_list COMA declaration_item\n        \n        declaration_item : ID\n                        | ID ASSIGN expression\n                        | ID LBRACKET expression RBRACKET ASSIGN expression\n                        | ID LBRACKET expression RBRACKET\n                        | ID ASSIGN array_initialization\n        \n        array_initialization : LBRACE expression_list RBRACE\n        \n        expression_list : expression\n                        | expression_list COMA expression\n        \n        assignment_statement : ID ASSIGN expression SEMICOLON\n                             | ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON\n        expression_statement : expression SEMICOLON\n        print_statement : WRITELN LPAREN expression RPAREN SEMICOLON \n                        | WRITE LPAREN expression RPAREN SEMICOLON\n        \n        if_statement : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n                     | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n        while_statement : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfor_statement : FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE\n        expression : expression PLUSPLUS\n                | expression MINUSMINUS\n                | PLUSPLUS expression\n                | MINUSMINUS expression\n                | expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | expression LT expression\n                | expression GT expression\n                | expression LTE expression\n                | expression GTE expression\n                | expression EQ expression\n                | expression NE expression\n                | VAR_INT\n                | VAR_FLOAT\n                | STRING\n                | ID\n        \n        type : INT\n             | FLOAT\n             | BOOL\n             | STRING\n             | INT LBRACKET RBRACKET\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,32,],[0,-1,]),'ID':([2,4,6,7,8,9,10,11,12,13,14,16,22,23,26,27,28,29,30,31,33,34,37,38,39,40,41,42,43,44,45,46,50,51,52,53,54,72,73,74,75,80,82,83,88,95,99,100,101,102,103,106,107,108,109,111,114,115,118,119,120,121,122,123,],[3,5,5,-2,-4,-5,-6,-7,-8,-9,-10,49,57,57,-52,-49,-50,-51,57,57,-3,-24,57,57,57,57,57,57,57,57,57,57,57,57,57,57,81,-11,49,57,57,57,-53,-22,57,57,-25,-26,5,5,57,57,57,5,5,-23,-27,-29,5,5,5,5,-30,-28,]),'LBRACE':([3,74,92,93,116,117,],[4,88,101,102,118,119,]),'WRITELN':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,17,17,17,17,-23,-27,-29,17,17,17,17,-30,-28,]),'WRITE':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,18,18,18,18,-23,-27,-29,18,18,18,18,-30,-28,]),'IF':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,19,19,19,19,-23,-27,-29,19,19,19,19,-30,-28,]),'WHILE':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,20,20,20,20,-23,-27,-29,20,20,20,20,-30,-28,]),'FOR':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,21,21,21,21,-23,-27,-29,21,21,21,21,-30,-28,]),'PLUSPLUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,52,53,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,83,86,88,89,94,95,97,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,118,119,120,121,122,123,],[22,-48,22,-2,-4,-5,-6,-7,-8,-9,-10,35,22,22,-45,-46,-47,22,22,-3,-24,-31,-32,22,22,22,22,22,22,22,22,22,22,22,22,22,22,35,-47,-48,35,35,35,35,35,35,35,35,35,35,35,35,35,-11,22,22,35,35,35,35,22,-22,35,22,35,35,22,35,-25,-26,22,22,22,35,22,22,22,22,35,-23,35,35,-27,-29,22,22,22,22,-30,-28,]),'MINUSMINUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,52,53,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,83,86,88,89,94,95,97,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,118,119,120,121,122,123,],[23,-48,23,-2,-4,-5,-6,-7,-8,-9,-10,36,23,23,-45,-46,-47,23,23,-3,-24,-31,-32,23,23,23,23,23,23,23,23,23,23,23,23,23,23,36,-47,-48,36,36,36,36,36,36,36,36,36,36,36,36,36,-11,23,23,36,36,36,36,23,-22,36,23,36,36,23,36,-25,-26,23,23,23,36,23,23,23,23,36,-23,36,36,-27,-29,23,23,23,23,-30,-28,]),'VAR_INT':([4,6,7,8,9,10,11,12,13,14,22,23,30,31,33,34,37,38,39,40,41,42,43,44,45,46,50,51,52,53,72,74,75,80,83,88,95,99,100,101,102,103,106,107,108,109,111,114,115,118,119,120,121,122,123,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,24,24,24,24,-3,-24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-11,24,24,24,-22,24,24,-25,-26,24,24,24,24,24,24,24,-23,-27,-29,24,24,24,24,-30,-28,]),'VAR_FLOAT':([4,6,7,8,9,10,11,12,13,14,22,23,30,31,33,34,37,38,39,40,41,42,43,44,45,46,50,51,52,53,72,74,75,80,83,88,95,99,100,101,102,103,106,107,108,109,111,114,115,118,119,120,121,122,123,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,25,25,25,25,-3,-24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-11,25,25,25,-22,25,25,-25,-26,25,25,25,25,25,25,25,-23,-27,-29,25,25,25,25,-30,-28,]),'STRING':([4,6,7,8,9,10,11,12,13,14,22,23,30,31,33,34,37,38,39,40,41,42,43,44,45,46,50,51,52,53,72,74,75,80,83,88,95,99,100,101,102,103,106,107,108,109,111,114,115,118,119,120,121,122,123,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,56,56,56,56,-3,-24,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-11,56,56,56,-22,56,56,-25,-26,26,26,56,56,56,26,26,-23,-27,-29,26,26,26,26,-30,-28,]),'INT':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[27,27,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,27,27,27,27,-23,-27,-29,27,27,27,27,-30,-28,]),'FLOAT':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,28,28,28,28,-23,-27,-29,28,28,28,28,-30,-28,]),'BOOL':([4,6,7,8,9,10,11,12,13,14,33,34,72,83,99,100,101,102,108,109,111,114,115,118,119,120,121,122,123,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-3,-24,-11,-22,-25,-26,29,29,29,29,-23,-27,-29,29,29,29,29,-30,-28,]),'ASSIGN':([5,49,81,84,98,],[30,74,30,95,107,]),'LBRACKET':([5,27,49,81,],[31,59,75,31,]),'SEMICOLON':([5,15,24,25,26,35,36,47,48,49,55,56,57,58,60,62,63,64,65,66,67,68,69,70,71,85,86,87,90,91,94,98,104,105,113,],[-48,34,-45,-46,-47,-31,-32,72,-12,-14,-33,-47,-48,-34,83,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-13,-15,-18,99,100,103,-17,111,-19,-16,]),'PLUS':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,37,-45,-46,-47,-31,-32,37,-47,-48,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'MINUS':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,38,-45,-46,-47,-31,-32,38,-47,-48,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TIMES':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,39,-45,-46,-47,-31,-32,39,-47,-48,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'DIVIDE':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,40,-45,-46,-47,-31,-32,40,-47,-48,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'LT':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,41,-45,-46,-47,-31,-32,41,-47,-48,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'GT':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,42,-45,-46,-47,-31,-32,42,-47,-48,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'LTE':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,43,-45,-46,-47,-31,-32,43,-47,-48,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'GTE':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,44,-45,-46,-47,-31,-32,44,-47,-48,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'EQ':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,45,-45,-46,-47,-31,-32,45,-47,-48,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'NE':([5,15,24,25,26,35,36,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,110,112,113,],[-48,46,-45,-46,-47,-31,-32,46,-47,-48,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'RBRACE':([6,7,8,9,10,11,12,13,14,24,25,33,34,35,36,55,56,57,58,62,63,64,65,66,67,68,69,70,71,72,83,96,97,99,100,108,109,111,112,114,115,120,121,122,123,],[32,-2,-4,-5,-6,-7,-8,-9,-10,-45,-46,-3,-24,-31,-32,-33,-47,-48,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-11,-22,105,-20,-25,-26,114,115,-23,-21,-27,-29,122,123,-30,-28,]),'LPAREN':([17,18,19,20,21,],[50,51,52,53,54,]),'RBRACKET':([24,25,35,36,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,89,],[-45,-46,-31,-32,-33,-47,-48,-34,82,84,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,98,]),'RPAREN':([24,25,35,36,55,56,57,58,62,63,64,65,66,67,68,69,70,71,76,77,78,79,110,],[-45,-46,-31,-32,-33,-47,-48,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,90,91,92,93,116,]),'COMA':([24,25,35,36,47,48,49,55,56,57,58,62,63,64,65,66,67,68,69,70,71,85,86,87,96,97,98,105,112,113,],[-45,-46,-31,-32,73,-12,-14,-33,-47,-48,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-13,-15,-18,106,-20,-17,-19,-21,-16,]),'ELSE':([114,],[117,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([4,101,102,118,119,],[6,108,109,120,121,]),'statement':([4,6,101,102,108,109,118,119,120,121,],[7,33,7,7,33,33,7,7,33,33,]),'expression_statement':([4,6,101,102,108,109,118,119,120,121,],[8,8,8,8,8,8,8,8,8,8,]),'declaration_statement':([4,6,101,102,108,109,118,119,120,121,],[9,9,9,9,9,9,9,9,9,9,]),'assignment_statement':([4,6,54,101,102,108,109,118,119,120,121,],[10,10,80,10,10,10,10,10,10,10,10,]),'print_statement':([4,6,101,102,108,109,118,119,120,121,],[11,11,11,11,11,11,11,11,11,11,]),'if_statement':([4,6,101,102,108,109,118,119,120,121,],[12,12,12,12,12,12,12,12,12,12,]),'while_statement':([4,6,101,102,108,109,118,119,120,121,],[13,13,13,13,13,13,13,13,13,13,]),'for_statement':([4,6,101,102,108,109,118,119,120,121,],[14,14,14,14,14,14,14,14,14,14,]),'expression':([4,6,22,23,30,31,37,38,39,40,41,42,43,44,45,46,50,51,52,53,74,75,80,88,95,101,102,103,106,107,108,109,118,119,120,121,],[15,15,55,58,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,86,89,94,97,104,15,15,110,112,113,15,15,15,15,15,15,]),'type':([4,6,101,102,108,109,118,119,120,121,],[16,16,16,16,16,16,16,16,16,16,]),'declaration_list':([16,],[47,]),'declaration_item':([16,73,],[48,85,]),'array_initialization':([74,],[87,]),'expression_list':([88,],[96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LBRACE statement_list RBRACE','program',5,'p_program','parser_.py',28),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_.py',33),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_.py',34),
  ('statement -> expression_statement','statement',1,'p_statement','parser_.py',43),
  ('statement -> declaration_statement','statement',1,'p_statement','parser_.py',44),
  ('statement -> assignment_statement','statement',1,'p_statement','parser_.py',45),
  ('statement -> print_statement','statement',1,'p_statement','parser_.py',46),
  ('statement -> if_statement','statement',1,'p_statement','parser_.py',47),
  ('statement -> while_statement','statement',1,'p_statement','parser_.py',48),
  ('statement -> for_statement','statement',1,'p_statement','parser_.py',49),
  ('declaration_statement -> type declaration_list SEMICOLON','declaration_statement',3,'p_declaration_statement','parser_.py',55),
  ('declaration_list -> declaration_item','declaration_list',1,'p_declaration_list','parser_.py',61),
  ('declaration_list -> declaration_list COMA declaration_item','declaration_list',3,'p_declaration_list','parser_.py',62),
  ('declaration_item -> ID','declaration_item',1,'p_declaration_item','parser_.py',71),
  ('declaration_item -> ID ASSIGN expression','declaration_item',3,'p_declaration_item','parser_.py',72),
  ('declaration_item -> ID LBRACKET expression RBRACKET ASSIGN expression','declaration_item',6,'p_declaration_item','parser_.py',73),
  ('declaration_item -> ID LBRACKET expression RBRACKET','declaration_item',4,'p_declaration_item','parser_.py',74),
  ('declaration_item -> ID ASSIGN array_initialization','declaration_item',3,'p_declaration_item','parser_.py',75),
  ('array_initialization -> LBRACE expression_list RBRACE','array_initialization',3,'p_array_initialization','parser_.py',88),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser_.py',94),
  ('expression_list -> expression_list COMA expression','expression_list',3,'p_expression_list','parser_.py',95),
  ('assignment_statement -> ID ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser_.py',104),
  ('assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON','assignment_statement',7,'p_assignment_statement','parser_.py',105),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser_.py',113),
  ('print_statement -> WRITELN LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',118),
  ('print_statement -> WRITE LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',119),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parser_.py',125),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parser_.py',126),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parser_.py',134),
  ('for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE','for_statement',10,'p_for_statement','parser_.py',138),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression','parser_.py',143),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression','parser_.py',144),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression','parser_.py',145),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression','parser_.py',146),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser_.py',147),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser_.py',148),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser_.py',149),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser_.py',150),
  ('expression -> expression LT expression','expression',3,'p_expression','parser_.py',151),
  ('expression -> expression GT expression','expression',3,'p_expression','parser_.py',152),
  ('expression -> expression LTE expression','expression',3,'p_expression','parser_.py',153),
  ('expression -> expression GTE expression','expression',3,'p_expression','parser_.py',154),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser_.py',155),
  ('expression -> expression NE expression','expression',3,'p_expression','parser_.py',156),
  ('expression -> VAR_INT','expression',1,'p_expression','parser_.py',157),
  ('expression -> VAR_FLOAT','expression',1,'p_expression','parser_.py',158),
  ('expression -> STRING','expression',1,'p_expression','parser_.py',159),
  ('expression -> ID','expression',1,'p_expression','parser_.py',160),
  ('type -> INT','type',1,'p_type','parser_.py',174),
  ('type -> FLOAT','type',1,'p_type','parser_.py',175),
  ('type -> BOOL','type',1,'p_type','parser_.py',176),
  ('type -> STRING','type',1,'p_type','parser_.py',177),
  ('type -> INT LBRACKET RBRACKET','type',3,'p_type','parser_.py',178),
]
