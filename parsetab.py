
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COMA DIVIDE ELSE EQ FLOAT FOR GT GTE ID IF INT LBRACE LPAREN LT LTE MINUS MINUSMINUS NE PLUS PLUSPLUS PROGRAM RBRACE RPAREN SEMICOLON STRING TIMES VAR_FLOAT VAR_INT WHILE WRITE WRITELNprogram : PROGRAM ID LBRACE statement_list RBRACE\n        statement_list : statement\n                       | statement_list statement\n        \n        statement : expression_statement \n                  | declaration_statement\n                  | assignment_statement\n                  | print_statement\n                  | if_statement\n                  | while_statement\n                  | for_statement\n        \n        declaration_statement : type declaration_list SEMICOLON\n        \n        declaration_list : declaration_item\n                        | declaration_list COMA declaration_item\n        \n        declaration_item : ID\n                        | ID ASSIGN expression\n        \n        id_list : ID\n                | id_list COMA ID\n        assignment_statement : ID ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLON\n        print_statement : WRITELN LPAREN expression RPAREN SEMICOLON \n                        | WRITE LPAREN expression RPAREN SEMICOLON\n        \n        if_statement : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n                     | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n        while_statement : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfor_statement : FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE\n        expression : expression PLUSPLUS\n                | expression MINUSMINUS\n                | PLUSPLUS expression\n                | MINUSMINUS expression\n                | expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | expression LT expression\n                | expression GT expression\n                | expression LTE expression\n                | expression GTE expression\n                | expression EQ expression\n                | expression NE expression\n                | VAR_INT\n                | VAR_FLOAT\n                | STRING\n                | ID\n        \n        type : INT\n             | FLOAT\n             | BOOL\n             | STRING\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,4,6,7,8,9,10,11,12,13,14,16,22,23,26,27,28,29,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,69,70,71,76,78,86,87,88,89,90,91,92,94,95,98,99,100,101,102,103,],[3,5,5,-2,-4,-5,-6,-7,-8,-9,-10,48,56,56,-47,-44,-45,-46,56,-3,-19,56,56,56,56,56,56,56,56,56,56,56,56,56,56,77,-11,48,56,56,-18,-20,-21,5,5,56,5,5,-22,-24,5,5,5,5,-25,-23,]),'LBRACE':([3,83,84,96,97,],[4,88,89,98,99,]),'WRITELN':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,17,17,17,17,-22,-24,17,17,17,17,-25,-23,]),'WRITE':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,18,18,18,18,-22,-24,18,18,18,18,-25,-23,]),'IF':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,19,19,19,19,-22,-24,19,19,19,19,-25,-23,]),'WHILE':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,20,20,20,20,-22,-24,20,20,20,20,-25,-23,]),'FOR':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,21,21,21,21,-22,-24,21,21,21,21,-25,-23,]),'PLUSPLUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,78,80,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,102,103,],[22,-43,22,-2,-4,-5,-6,-7,-8,-9,-10,34,22,22,-40,-41,-42,22,-3,-19,-26,-27,22,22,22,22,22,22,22,22,22,22,22,22,22,22,34,-42,-43,34,34,34,34,34,34,34,34,34,34,34,34,-11,22,34,34,34,34,22,-18,34,34,-20,-21,22,22,22,22,22,34,-22,-24,22,22,22,22,-25,-23,]),'MINUSMINUS':([4,5,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,78,80,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,102,103,],[23,-43,23,-2,-4,-5,-6,-7,-8,-9,-10,35,23,23,-40,-41,-42,23,-3,-19,-26,-27,23,23,23,23,23,23,23,23,23,23,23,23,23,23,35,-42,-43,35,35,35,35,35,35,35,35,35,35,35,35,-11,23,35,35,35,35,23,-18,35,35,-20,-21,23,23,23,23,23,35,-22,-24,23,23,23,23,-25,-23,]),'VAR_INT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,69,71,76,78,86,87,88,89,90,91,92,94,95,98,99,100,101,102,103,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,24,24,24,-3,-19,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-11,24,24,-18,-20,-21,24,24,24,24,24,-22,-24,24,24,24,24,-25,-23,]),'VAR_FLOAT':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,69,71,76,78,86,87,88,89,90,91,92,94,95,98,99,100,101,102,103,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,25,25,25,-3,-19,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-11,25,25,-18,-20,-21,25,25,25,25,25,-22,-24,25,25,25,25,-25,-23,]),'STRING':([4,6,7,8,9,10,11,12,13,14,22,23,30,32,33,36,37,38,39,40,41,42,43,44,45,49,50,51,52,69,71,76,78,86,87,88,89,90,91,92,94,95,98,99,100,101,102,103,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,55,55,55,-3,-19,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-11,55,55,-18,-20,-21,26,26,55,26,26,-22,-24,26,26,26,26,-25,-23,]),'INT':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[27,27,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,27,27,27,27,-22,-24,27,27,27,27,-25,-23,]),'FLOAT':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,28,28,28,28,-22,-24,28,28,28,28,-25,-23,]),'BOOL':([4,6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,88,89,91,92,94,95,98,99,100,101,102,103,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,29,29,29,29,-22,-24,29,29,29,29,-25,-23,]),'ASSIGN':([5,48,77,],[30,71,30,]),'SEMICOLON':([5,15,24,25,26,34,35,46,47,48,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,80,81,82,85,],[-43,33,-40,-41,-42,-26,-27,69,-12,-14,-28,-42,-43,-29,78,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-13,-15,86,87,90,]),'PLUS':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,36,-40,-41,-42,-26,-27,36,-42,-43,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MINUS':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,37,-40,-41,-42,-26,-27,37,-42,-43,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TIMES':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,38,-40,-41,-42,-26,-27,38,-42,-43,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DIVIDE':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,39,-40,-41,-42,-26,-27,39,-42,-43,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LT':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,40,-40,-41,-42,-26,-27,40,-42,-43,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'GT':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,41,-40,-41,-42,-26,-27,41,-42,-43,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'LTE':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,42,-40,-41,-42,-26,-27,42,-42,-43,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'GTE':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,43,-40,-41,-42,-26,-27,43,-42,-43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'EQ':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,44,-40,-41,-42,-26,-27,44,-42,-43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NE':([5,15,24,25,26,34,35,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,93,],[-43,45,-40,-41,-42,-26,-27,45,-42,-43,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RBRACE':([6,7,8,9,10,11,12,13,14,32,33,69,78,86,87,91,92,94,95,100,101,102,103,],[31,-2,-4,-5,-6,-7,-8,-9,-10,-3,-19,-11,-18,-20,-21,94,95,-22,-24,102,103,-25,-23,]),'LPAREN':([17,18,19,20,21,],[49,50,51,52,53,]),'RPAREN':([24,25,34,35,54,55,56,57,59,60,61,62,63,64,65,66,67,68,72,73,74,75,93,],[-40,-41,-26,-27,-28,-42,-43,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,81,82,83,84,96,]),'COMA':([24,25,34,35,46,47,48,54,55,56,57,59,60,61,62,63,64,65,66,67,68,79,80,],[-40,-41,-26,-27,70,-12,-14,-28,-42,-43,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-13,-15,]),'ELSE':([94,],[97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([4,88,89,98,99,],[6,91,92,100,101,]),'statement':([4,6,88,89,91,92,98,99,100,101,],[7,32,7,7,32,32,7,7,32,32,]),'expression_statement':([4,6,88,89,91,92,98,99,100,101,],[8,8,8,8,8,8,8,8,8,8,]),'declaration_statement':([4,6,88,89,91,92,98,99,100,101,],[9,9,9,9,9,9,9,9,9,9,]),'assignment_statement':([4,6,53,88,89,91,92,98,99,100,101,],[10,10,76,10,10,10,10,10,10,10,10,]),'print_statement':([4,6,88,89,91,92,98,99,100,101,],[11,11,11,11,11,11,11,11,11,11,]),'if_statement':([4,6,88,89,91,92,98,99,100,101,],[12,12,12,12,12,12,12,12,12,12,]),'while_statement':([4,6,88,89,91,92,98,99,100,101,],[13,13,13,13,13,13,13,13,13,13,]),'for_statement':([4,6,88,89,91,92,98,99,100,101,],[14,14,14,14,14,14,14,14,14,14,]),'expression':([4,6,22,23,30,36,37,38,39,40,41,42,43,44,45,49,50,51,52,71,76,88,89,90,91,92,98,99,100,101,],[15,15,54,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,80,85,15,15,93,15,15,15,15,15,15,]),'type':([4,6,88,89,91,92,98,99,100,101,],[16,16,16,16,16,16,16,16,16,16,]),'declaration_list':([16,],[46,]),'declaration_item':([16,70,],[47,79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LBRACE statement_list RBRACE','program',5,'p_program','parser_.py',29),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_.py',35),
  ('statement -> expression_statement','statement',1,'p_statement','parser_.py',44),
  ('statement -> declaration_statement','statement',1,'p_statement','parser_.py',45),
  ('statement -> assignment_statement','statement',1,'p_statement','parser_.py',46),
  ('statement -> print_statement','statement',1,'p_statement','parser_.py',47),
  ('statement -> if_statement','statement',1,'p_statement','parser_.py',48),
  ('statement -> while_statement','statement',1,'p_statement','parser_.py',49),
  ('statement -> for_statement','statement',1,'p_statement','parser_.py',50),
  ('declaration_statement -> type declaration_list SEMICOLON','declaration_statement',3,'p_declaration_statement','parser_.py',56),
  ('declaration_list -> declaration_item','declaration_list',1,'p_declaration_list','parser_.py',62),
  ('declaration_list -> declaration_list COMA declaration_item','declaration_list',3,'p_declaration_list','parser_.py',63),
  ('declaration_item -> ID','declaration_item',1,'p_declaration_item','parser_.py',72),
  ('declaration_item -> ID ASSIGN expression','declaration_item',3,'p_declaration_item','parser_.py',73),
  ('id_list -> ID','id_list',1,'p_id_list','parser_.py',82),
  ('id_list -> id_list COMA ID','id_list',3,'p_id_list','parser_.py',83),
  ('assignment_statement -> ID ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser_.py',91),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser_.py',95),
  ('print_statement -> WRITELN LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',100),
  ('print_statement -> WRITE LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser_.py',101),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parser_.py',107),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parser_.py',108),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parser_.py',116),
  ('for_statement -> FOR LPAREN assignment_statement expression SEMICOLON expression RPAREN LBRACE statement_list RBRACE','for_statement',10,'p_for_statement','parser_.py',120),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression','parser_.py',125),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression','parser_.py',126),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression','parser_.py',127),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression','parser_.py',128),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser_.py',129),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser_.py',130),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser_.py',131),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser_.py',132),
  ('expression -> expression LT expression','expression',3,'p_expression','parser_.py',133),
  ('expression -> expression GT expression','expression',3,'p_expression','parser_.py',134),
  ('expression -> expression LTE expression','expression',3,'p_expression','parser_.py',135),
  ('expression -> expression GTE expression','expression',3,'p_expression','parser_.py',136),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser_.py',137),
  ('expression -> expression NE expression','expression',3,'p_expression','parser_.py',138),
  ('expression -> VAR_INT','expression',1,'p_expression','parser_.py',139),
  ('expression -> VAR_FLOAT','expression',1,'p_expression','parser_.py',140),
  ('expression -> STRING','expression',1,'p_expression','parser_.py',141),
  ('expression -> ID','expression',1,'p_expression','parser_.py',142),
  ('type -> INT','type',1,'p_type','parser_.py',156),
  ('type -> FLOAT','type',1,'p_type','parser_.py',157),
  ('type -> BOOL','type',1,'p_type','parser_.py',158),
  ('type -> STRING','type',1,'p_type','parser_.py',159),
]
